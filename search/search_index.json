{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>This is a continuation of my original contribution of a reworked Docker/Compose system for Pixelfed.</p> <p>This project is consolidating the original work, planned improvements, and documentation into one place, where I and hopefully others, can freely iterate and improve on the Pixelfed + Docker experience.</p> <p>It's still in the early setup and consolidation phase, so some things might link incorrectly or have out of date information.</p> <p>See the WIP v3 migration doc for more information</p>"},{"location":"conventions/","title":"Conventions","text":"<p>This section explains several conventions used in this documentation.</p>"},{"location":"conventions/#symbols","title":"Symbols","text":"<p>This documentation use some symbols for illustration purposes. Before you read on, please make sure you've made yourself familiar with the following list of conventions:</p>"},{"location":"conventions/#version","title":"\u2013 Version","text":"<p>The tag symbol in conjunction with a version number denotes when a specific feature or behavior was added. Make sure you're at least on this version if you want to use it.</p>"},{"location":"conventions/#default","title":"\u2013 Default value","text":"<p>Some properties in <code>.env</code> have default values for when the author does not explicitly define them. The default value of the property is always included.</p>"},{"location":"conventions/#default","title":"computed \u2013 Default value is computed","text":"<p>Some default values are not set to static values but computed from other values, like the site language, repository provider, or other settings.</p>"},{"location":"conventions/#default","title":"\u2013 Default value is empty","text":"<p>Some properties do not contain default values. This means that the functionality that is associated with them is not available unless explicitly enabled.</p>"},{"location":"conventions/#experimental","title":"\u2013 Experimental","text":"<p>Some newer features are still considered experimental, which means they might (although rarely) change at any time, including their complete removal (which hasn't happened yet).</p>"},{"location":"conventions/#required","title":"\u2013 Required value","text":"<p>Some (very few in fact) properties or settings are required, which means the authors must explicitly define them.</p>"},{"location":"conventions/#customization","title":"\u2013 Customization","text":"<p>This symbol denotes that the thing described is a customization that must be added by the author.</p>"},{"location":"conventions/#external-docs","title":"\u2013 External Documentation","text":"<p>This symbol denotes external documentation is available</p>"},{"location":"customize/build-settings/","title":"Build settings","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>Most of these build arguments is configurable in your <code>.env</code> file when using the <code>docker-compose.yml</code> from Pixelfed!</p> <p>The Pixelfed Dockerfile utilizes Docker Multi-stage builds and Build arguments.</p> <p>Using build arguments allows us to create a flexible and more maintainable Dockerfile, supporting multiple runtimes (Nginx and Apache + mod_php) and end-user flexibility without having to fork or copy the Dockerfile.</p> <p>Build arguments can be configured using <code>--build-arg 'name=value'</code> for <code>docker build</code>, <code>docker compose build</code> and <code>docker buildx build</code>. For <code>docker-compose.yml</code>, the <code>args</code> key for <code>build</code> can be used.</p> <p>Most settings have two names in the title. The first one is the build arg name (<code>--build-arg</code>) and the second is the name in your <code>.env</code> file when using Docker Compose</p>"},{"location":"customize/build-settings/#php_version","title":"<code>PHP_VERSION</code>","text":"<p>Named <code>DOCKER_APP_PHP_VERSION</code> in your <code>.env</code> file</p> <p>The <code>PHP</code> version to use when building the runtime container.</p> <p>Any valid Docker Hub PHP version is acceptable here, as long as it's published to Docker Hub</p> <p>Example values:</p> <ul> <li><code>8</code> will use the latest version of PHP 8</li> <li><code>8.1</code> will use the latest version of PHP 8.1</li> <li><code>8.2.14</code> will use PHP 8.2.14</li> <li><code>latest</code> will use whatever is the latest PHP version</li> </ul> <p>Default value: <code>8.3</code></p>"},{"location":"customize/build-settings/#php_pecl_extensions","title":"<code>PHP_PECL_EXTENSIONS</code>","text":"<p>PECL extensions to install via <code>pecl install</code></p> <p>Use PHP_PECL_EXTENSIONS_EXTRA if you want to add additional extenstions.</p> <p>Only change this setting if you want to change the baseline extensions.</p> <p>See the <code>PECL extensions</code> documentation on Docker Hub for more information.</p> <p>Default value: <code>imagick redis</code></p>"},{"location":"customize/build-settings/#php_pecl_extensions_extra","title":"<code>PHP_PECL_EXTENSIONS_EXTRA</code>","text":"<p>Named <code>DOCKER_APP_PHP_PECL_EXTENSIONS_EXTRA</code> in your <code>.env</code> file</p> <p>Extra PECL extensions (separated by space) to install via <code>pecl install</code></p> <p>See the <code>PECL extensions</code> documentation on Docker Hub for more information.</p> <p>Default value: <code>\"\"</code></p>"},{"location":"customize/build-settings/#php_extensions","title":"<code>PHP_EXTENSIONS</code>","text":"<p>PHP Extensions to install via <code>docker-php-ext-install</code>.</p> <p>NOTE: use <code>PHP_EXTENSIONS_EXTRA</code> if you want to add additional extensions; only override this if you're going to change the baseline extensions.</p> <p>See the <code>How to install more PHP extensions</code> documentation on Docker Hub for more information</p> <p>Default value: <code>intl bcmath zip pcntl exif curl gd</code></p>"},{"location":"customize/build-settings/#php_extensions_extra","title":"<code>PHP_EXTENSIONS_EXTRA</code>","text":"<p>Named <code>DOCKER_APP_PHP_EXTENSIONS_EXTRA</code> in your <code>.env</code> file</p> <p>Extra PHP Extensions (separated by space) to install via <code>docker-php-ext-install</code>.</p> <p>See the <code>How to install more PHP extensions</code> documentation on Docker Hub for more information.</p> <p>Default value: <code>\"\"</code></p>"},{"location":"customize/build-settings/#php_extensions_database","title":"<code>PHP_EXTENSIONS_DATABASE</code>","text":"<p>PHP database extensions to install.</p> <p>By default, we install both <code>pgsql</code> and <code>mysql</code> since they're more convenient (and add very little build time! But it can be overwritten here if desired.</p> <p>Default value: <code>pdo_pgsql pdo_mysql pdo_sqlite</code></p>"},{"location":"customize/build-settings/#composer_version","title":"<code>COMPOSER_VERSION</code>","text":"<p>The version of Composer to install.</p> <p>For valid values, please see the Docker Hub <code>composer</code> page.</p> <p>Default value: <code>2.6</code></p>"},{"location":"customize/build-settings/#apt_packages_extra","title":"<code>APT_PACKAGES_EXTRA</code>","text":"<p>Named <code>DOCKER_APP_APT_PACKAGES_EXTRA</code> in your <code>.env</code> file</p> <p>Extra APT packages (separated by space) that should be installed inside the image by <code>apt-get install</code></p> <p>Default value: <code>\"\"</code></p>"},{"location":"customize/build-settings/#nginx_version","title":"<code>NGINX_VERSION</code>","text":"<p>The version of <code>nginx</code> to use when targeting <code>nginx-runtime</code>.</p> <p>Please see the Docker Hub <code>nginx</code> page for available versions.</p> <p>Default value: <code>1.25.3</code></p>"},{"location":"customize/build-settings/#forego_version","title":"<code>FOREGO_VERSION</code>","text":"<p>The version of <code>forego</code> to install.</p> <p>Default value: <code>0.17.2</code></p>"},{"location":"customize/build-settings/#gomplate_version","title":"<code>GOMPLATE_VERSION</code>","text":"<p>The version of <code>goplate</code> to install.</p> <p>Default value: <code>v3.11.6</code></p>"},{"location":"customize/build-settings/#dotenv_linter_version","title":"<code>DOTENV_LINTER_VERSION</code>","text":"<p>Version of <code>dotenv-linter</code> to install.</p> <p>Default value: <code>v3.2.0</code></p>"},{"location":"customize/build-settings/#php_base_type","title":"<code>PHP_BASE_TYPE</code>","text":"<p>Named <code>DOCKER_APP_BASE_TYPE</code> in your <code>.env</code> file</p> <p>The <code>PHP</code> base image layer to use when building the runtime container.</p> <p>When targeting</p> <ul> <li><code>apache-runtime</code> use <code>apache</code></li> <li><code>nginx-runtime</code> use <code>fpm</code></li> </ul> <p>Valid values:</p> <ul> <li><code>apache</code></li> <li><code>cli</code></li> </ul> <p>Default value: <code>apache</code></p>"},{"location":"customize/build-settings/#php_debian_release","title":"<code>PHP_DEBIAN_RELEASE</code>","text":"<p>Named <code>DOCKER_APP_DEBIAN_RELEASE</code> in your <code>.env</code> file</p> <p>The <code>Debian</code> Operation System version to use.</p> <p>Valid values:</p> <ul> <li><code>bookworm</code></li> </ul> <p>Default value: <code>bookworm</code></p>"},{"location":"customize/entrypoint/","title":"Entrypoint","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>Tip</p> <p>Most, if not all, configuration options for both Pixelfed and Docker is included and documented in the <code>.env.docker</code> (or <code>.env</code> file once you copied it during the installation) It's highly recommended to give it a read from top to bottom, or trying to search it for the thing you would like to change.</p> <p>We of course aim for this page to cover everything, and if we missed anything, please submit a Pull Request or a ticket for us </p>"},{"location":"customize/entrypoint/#run-script-on-startup-entrypoint","title":"Run script on startup (ENTRYPOINT)","text":"<p>When a Pixelfed container starts up, the <code>ENTRYPOINT</code> script will</p> <ol> <li>Search the <code>/docker/entrypoint.d/</code> directory for files and for each file (in lexical order).</li> <li>Check if the file is executable.<ol> <li>If the file is not executable, print an error and exit the container.</li> </ol> </li> <li>If the file has the extension <code>.envsh</code>, the file will be sourced.</li> <li>If the file has the extension <code>.sh</code>, the file will be run like a regular script.</li> <li>Any other file extension will log a warning and be ignored.</li> </ol>"},{"location":"customize/entrypoint/#debugging","title":"Debugging","text":"<p>You can set the environment variable <code>DOCKER_APP_ENTRYPOINT_DEBUG=1</code> to show the verbose output of each <code>entrypoint.d</code> script is doing.</p>"},{"location":"customize/entrypoint/#included-scripts","title":"Included scripts","text":"<ul> <li><code>01-permissions.sh</code> (optionally) ensures permissions for files are corrected (see fixing ownership on startup).</li> <li><code>02-check-config.sh</code> Ensures your <code>.env</code> file is valid - like missing quotes or syntax errors.</li> <li><code>04-defaults.envsh</code> calculates Docker container environment variables needed for templating configuration files.</li> <li><code>05-templating.sh</code> renders template configuration files.</li> <li><code>10-storage.sh</code> ensures Pixelfed storage related permissions and commands are run.</li> <li><code>11-first-time-setup.sh</code> automatically runs all \"one time setup\" steps for a new Pixelfed server.</li> <li><code>12-migrations.sh</code> optionally run database migrations on container start up.</li> <li><code>20-horizon.sh</code> ensures Laravel Horizon used by Pixelfed is configured.</li> <li><code>30-cache.sh</code> ensures all Pixelfed caches (router, view, config) are primed.</li> </ul>"},{"location":"customize/entrypoint/#disabling-entrypoint-or-individual-scripts","title":"Disabling <code>ENTRYPOINT</code> or individual scripts","text":"<p>To disable the entire <code>ENTRYPOINT</code> you can set the variable <code>ENTRYPOINT_SKIP=1</code>.</p> <p>To disable individual <code>ENTRYPOINT</code> scripts, you can add the filename to the space (<code>\" \"</code>) separated variable <code>ENTRYPOINT_SKIP_SCRIPTS</code>. (example: <code>ENTRYPOINT_SKIP_SCRIPTS=\"10-storage.sh 30-cache.sh\"</code>)</p>"},{"location":"customize/entrypoint/#override-anything-and-everything","title":"Override anything and everything","text":"<p>Tip</p> <p>With the default Pixelfed <code>docker-compose.yml</code> the <code>overrides</code> bind mount is enabled by default for both <code>web</code> and <code>worker</code> service.</p> <p>The <code>overrides</code> folder on the host machine is in <code>./docker-compose-state/overrides</code> and can be changed via <code>DOCKER_APP_HOST_OVERRIDES_PATH</code> in the <code>.env</code> file.</p> <p>If you mount a bind volume (can be read-only) in <code>/docker/overrides</code> then all files and directories within that directory will be copied on top of <code>/</code>.</p> <p>This enables you to create or override anything within the container during container startup.</p> <p>The copy operation happens as one of the first things in the <code>ENTRYPOINT</code> so you can put even override templates and the included <code>ENTRYPOINT</code> scripts - or add new ones!</p> <p>Of course it can also be used to override <code>php.ini</code>, <code>index.php</code> or any other config/script files you would want to.</p>"},{"location":"customize/entrypoint/#override-examples","title":"Override examples","text":"<ol> <li>To override <code>/usr/local/etc/php/php.ini</code> in the container, put the source file in <code>./docker-compose-state/overrides/usr/local/etc/php/php.ini</code>.</li> <li>To create <code>/a/fantastic/example.txt</code> in the container put the source file in <code>./docker-compose-state/overrides/a/fantastic/example.txt</code>.</li> <li>To override the default <code>/docker/templates/php.ini</code> template, put the source file in <code>./docker-compose-state/overrides/docker/templates/php.ini</code>.</li> <li>To override <code>/a/path/inside/the/container</code>, put the source file in <code>./docker-compose-state/overrides/a/path/inside/the/container</code>.</li> </ol>"},{"location":"customize/entrypoint/#fixing-ownership-on-startup","title":"Fixing ownership on startup","text":"<p>You can set the environment variable <code>DOCKER_APP_ENSURE_OWNERSHIP_PATHS</code> to a list of paths that should have their <code>$USER</code> and <code>$GROUP</code> ownership changed to the configured runtime user and group during container bootstrapping.</p> <p>The variable is a space-delimited list shown below and accepts both relative and absolute paths:</p> <ul> <li><code>DOCKER_APP_ENSURE_OWNERSHIP_PATHS=\"./storage ./bootstrap\"</code></li> <li><code>DOCKER_APP_ENSURE_OWNERSHIP_PATHS=\"/some/other/folder\"</code></li> </ul>"},{"location":"customize/entrypoint/#one-time-setup-tasks","title":"One-time setup tasks","text":"<p>The script stores <code>lock</code> files in the <code>storage/docker/once</code> folder to ensure that these tasks are only run once, so for new Pixelfed servers, you do not need to disable this behavior!</p> <p>The Docker container will by default try to run the required One-time setup tasks for you on startup.</p> <p>If your Pixelfed server already have run these tasks, you must disable this by setting <code>DOCKER_APP_RUN_ONE_TIME_SETUP_TASKS=0</code> in your <code>.env</code> file.</p>"},{"location":"customize/entrypoint/#automatic-database-migrations","title":"Automatic database migrations","text":"<p>The init script will by default only detect if there are new database migrations - but not apply them - as these can potentially be destructive or take a long time to apply.</p> <p>By setting <code>DB_APPLY_NEW_MIGRATIONS_AUTOMATICALLY=1</code> in your <code>.env</code> file, the script will automatically apply new migrations when they are detected.</p>"},{"location":"customize/faq/","title":"FAQ","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p>"},{"location":"customize/faq/#how-do-i-use-my-own-proxy-server","title":"How do I use my own Proxy server?","text":"<p>No problem! All you have to do is:</p> <ol> <li>Change the <code>DOCKER_PROXY_PROFILE</code> key/value pair in your <code>.env</code> file to <code>\"disabled\"</code>.<ul> <li>This disables the <code>proxy</code> and <code>proxy-acme</code> services in <code>docker-compose.yml</code>.</li> <li>The setting is near the bottom of the file.</li> </ul> </li> <li>Point your proxy upstream to the exposed <code>web</code> port (Default: <code>8080</code>).<ul> <li>The port is controlled by the <code>DOCKER_WEB_PORT_EXTERNAL_HTTP</code> key in <code>.env</code>.</li> <li>The setting is near the bottom of the file.</li> </ul> </li> <li>Run <code>docker compose up -d --remove-orphans</code> to apply the configuration</li> </ol>"},{"location":"customize/faq/#how-do-i-use-my-own-ssl-certificate","title":"How do I use my own SSL certificate?","text":"<p>No problem! All you have to do is:</p> <ol> <li>Change the <code>DOCKER_PROXY_ACME_PROFILE</code> key/value pair in your <code>.env</code> file to <code>\"disabled\"</code>.<ul> <li>This disabled the <code>proxy-acme</code> service in <code>docker-compose.yml</code>.</li> <li>It does not disable the <code>proxy</code> service.</li> </ul> </li> <li>Put your certificates in <code>${DOCKER_ALL_HOST_CONFIG_ROOT_PATH}/proxy/certs</code> (e.g. <code>./docker-compose/config/proxy/certs</code>)<ul> <li>You may need to create this folder manually if it does not exist.</li> <li>The following files are expected to exist in the directory for the proxy to detect and use them automatically (this is the same directory and file names as LetsEncrypt uses)<ol> <li><code>${APP_DOMAIN}.cert.pem</code></li> <li><code>${APP_DOMAIN}.chain.pem</code></li> <li><code>${APP_DOMAIN}.fullchain.pem</code></li> <li><code>${APP_DOMAIN}.key.pem</code></li> </ol> </li> <li>See the <code>nginx-proxy</code> configuration file for name patterns</li> </ul> </li> <li>Run <code>docker compose up -d --remove-orphans</code> to apply the configuration</li> </ol>"},{"location":"customize/faq/#how-do-i-change-the-container-name-prefix","title":"How do I change the container name prefix?","text":"<p>Change the <code>DOCKER_ALL_CONTAINER_NAME_PREFIX</code> key/value pair in your <code>.env</code> file.</p>"},{"location":"customize/runtimes/","title":"Runtimes","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>The Pixelfed Dockerfile support multiple target runtimes (Apache and Nginx + FPM.)</p> <p>You can consider a runtime target as individual Dockerfiles, but instead, all of them are built from the same optimized Dockerfile, sharing +90% of their configuration and packages.</p> <p>What runtime is right for me?</p> <p>If you are unsure of which runtime to choose, please use the Apache runtime; it's the most straightforward one and also the default.</p>"},{"location":"customize/runtimes/#apache","title":"Apache","text":"<p>RECOMMENDED</p> <p>This is the default and recommended runtime for almost all single-server Pixelfed instances, as it has fewer moving parts, simplified operational model, and strikes a good balance between performance, features, and convenience.</p> <p>Building a custom Pixelfed Docker image using <code>Apache</code> + <code>mod_php</code> can be achieved the following way.</p>"},{"location":"customize/runtimes/#docker-build-apache","title":"docker build (Apache)","text":"<pre><code>docker build \\\n -f Dockerfile \\\n --target apache-runtime \\\n --tag &lt;docker hub user&gt;/&lt;docker hub repo&gt; \\\n .\n</code></pre>"},{"location":"customize/runtimes/#docker-compose-apache","title":"docker compose (Apache)","text":"<p>Info</p> <p>This is already configured if you use the default Pixelfed <code>docker-compose.yml</code></p> <p>Instead you control the target runtime via your <code>.env</code> file</p> <pre><code>DOCKER_APP_BASE_TYPE=\"apache\"\nDOCKER_APP_RUNTIME=\"apache\"\n</code></pre> <pre><code>version: \"3\"\n\nservices:\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      target: apache-runtime\n</code></pre>"},{"location":"customize/runtimes/#nginx-fpm","title":"Nginx + FPM","text":"<p>ADVANCED USAGE</p> <p>Nginx + FPM has more moving parts than the default (and recommended) Apache runtime.</p> <p>Only select this runtime if you have valid technical reasons to do so.</p> <p>Building a custom Pixelfed Docker image using nginx + FPM can be achieved the following way.</p>"},{"location":"customize/runtimes/#docker-build-nginx","title":"docker build (Nginx)","text":"<pre><code>docker build \\\n -f Dockerfile \\\n --target nginx-runtime \\\n --build-arg 'PHP_BASE_TYPE=fpm' \\\n --tag &lt;docker hub user&gt;/&lt;docker hub repo&gt; \\\n .\n</code></pre>"},{"location":"customize/runtimes/#docker-compose-nginx","title":"docker compose (Nginx)","text":"<p>Info</p> <p>This is already configured if you use the default Pixelfed <code>docker-compose.yml</code></p> <p>Instead you control the target runtime via your <code>.env</code> file</p> <pre><code>DOCKER_APP_BASE_TYPE=\"fpm\"\nDOCKER_APP_RUNTIME=\"nginx\"\n</code></pre> <pre><code>version: \"3\"\n\nservices:\n app:\n  build:\n   context: .\n   dockerfile: Dockerfile\n   target: nginx-runtime\n   args:\n     PHP_BASE_TYPE: fpm\n</code></pre>"},{"location":"customize/settings/","title":"Settings","text":""},{"location":"customize/settings/#env-settings","title":".env settings","text":"<p>Info</p> <p>This is an autogenerated page containing all the settings from the default <code>.env.docker</code> file. Below is a quick overview of the most frequently changed sections</p> <p>Pixelfed settings</p> <ul> <li>App</li> <li>Database</li> <li>Mail</li> <li>Redis</li> <li>Storage</li> </ul> <p>Docker settings</p> <ul> <li>Shared</li> <li>App</li> <li>Database</li> <li>Proxy</li> <li>Redis</li> <li>Web</li> <li>Worker</li> </ul>"},{"location":"customize/settings/#app","title":"App","text":""},{"location":"customize/settings/#app_name","title":"APP_NAME","text":"<p> docs.pixelfed.org</p> <p>The name/title for your site</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>ne=My Pixelfed Site</code></li> </ul>"},{"location":"customize/settings/#app_domain","title":"APP_DOMAIN","text":"<p> docs.pixelfed.org</p> <p>Application domain used for routing. (e.g., pixelfed.org)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>ne=pixelfed.org</code></li> <li><code>fqdn</code></li> </ul>"},{"location":"customize/settings/#app_url","title":"APP_URL","text":"<p> <code>https://${APP_DOMAIN}</code> docs.pixelfed.org</p> <p>This URL is used by the console to properly generate URLs when using the Artisan command line tool. You should set this to the root of your application so that it is used when running Artisan tasks.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>http_url</code></li> </ul>"},{"location":"customize/settings/#admin_domain","title":"ADMIN_DOMAIN","text":"<p> <code>${APP_DOMAIN}</code> docs.pixelfed.org</p> <p>Application domains used for routing.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>fqdn</code></li> </ul>"},{"location":"customize/settings/#app_env","title":"APP_ENV","text":"<p><code>production</code> docs.pixelfed.org</p> <p>This value determines the \u201cenvironment\u201d your application is currently running in. This may determine how you prefer to configure various services your application utilizes.</p> <p>Validation rules:</p> <ul> <li><code>oneof=production dev staging</code></li> </ul>"},{"location":"customize/settings/#app_debug","title":"APP_DEBUG","text":"<p><code>false</code> docs.pixelfed.org</p> <p>When your application is in debug mode, detailed error messages with stack traces will be shown on every error that occurs within your application.</p> <p>If disabled, a simple generic error page is shown.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#enable_config_cache","title":"ENABLE_CONFIG_CACHE","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Disable config cache</p> <p>If disabled, settings must be managed by .env variables.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#open_registration","title":"OPEN_REGISTRATION","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Enable/disable new local account registrations.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#enforce_email_verification","title":"ENFORCE_EMAIL_VERIFICATION","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Require email verification before a new user can do anything.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#pf_max_users","title":"PF_MAX_USERS","text":"<p><code>1000</code> docs.pixelfed.org</p> <p>Allow a maximum number of user accounts.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#pf_enforce_max_users","title":"PF_ENFORCE_MAX_USERS","text":"<p><code>true</code></p> <p>Enforce the maximum number of user accounts</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#oauth_enabled","title":"OAUTH_ENABLED","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#app_timezone","title":"APP_TIMEZONE","text":"<p> <code>UTC</code> docs.pixelfed.org</p> <p>Do not edit your timezone once the service is running - or things will break!</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>timezone</code></li> </ul>"},{"location":"customize/settings/#app_locale","title":"APP_LOCALE","text":"<p><code>en</code> docs.pixelfed.org</p> <p>The application locale determines the default locale that will be used by the translation service provider. You are free to set this value to any of the locales which will be supported by the application.</p>"},{"location":"customize/settings/#app_fallback_locale","title":"APP_FALLBACK_LOCALE","text":"<p><code>en</code> docs.pixelfed.org</p> <p>The fallback locale determines the locale to use when the current one is not available.</p> <p>You may change the value to correspond to any of the language folders that are provided through your application.</p>"},{"location":"customize/settings/#limit_account_size","title":"LIMIT_ACCOUNT_SIZE","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#max_account_size","title":"MAX_ACCOUNT_SIZE","text":"<p><code>1000000</code> docs.pixelfed.org</p> <p>Update the max account size, the per user limit of files in kB.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_photo_size","title":"MAX_PHOTO_SIZE","text":"<p><code>15000</code> docs.pixelfed.org</p> <p>Update the max photo size, in kB.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_album_length","title":"MAX_ALBUM_LENGTH","text":"<p><code>4</code> docs.pixelfed.org</p> <p>The max number of photos allowed per post.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_avatar_size","title":"MAX_AVATAR_SIZE","text":"<p><code>2000</code> docs.pixelfed.org</p> <p>Update the max avatar size, in kB.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_caption_length","title":"MAX_CAPTION_LENGTH","text":"<p><code>500</code> docs.pixelfed.org</p> <p>Change the caption length limit for new local posts.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_bio_length","title":"MAX_BIO_LENGTH","text":"<p><code>125</code> docs.pixelfed.org</p> <p>Change the bio length limit for user profiles.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#max_name_length","title":"MAX_NAME_LENGTH","text":"<p><code>30</code> docs.pixelfed.org</p> <p>Change the length limit for user names.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#pf_optimize_images","title":"PF_OPTIMIZE_IMAGES","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Resize and optimize image uploads.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#image_quality","title":"IMAGE_QUALITY","text":"<p><code>80</code> docs.pixelfed.org</p> <p>Set the image optimization quality, must be a value between 1-100.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#pf_optimize_videos","title":"PF_OPTIMIZE_VIDEOS","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Resize and optimize video uploads.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#account_deletion","title":"ACCOUNT_DELETION","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Enable account deletion.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#account_delete_after","title":"ACCOUNT_DELETE_AFTER","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Set account deletion queue after X days, set to false to delete accounts immediately.</p> <p>Validation rules:</p> <ul> <li><code>boolean|number</code></li> </ul>"},{"location":"customize/settings/#instance_description","title":"INSTANCE_DESCRIPTION","text":"<p> docs.pixelfed.org</p>"},{"location":"customize/settings/#instance_public_hashtags","title":"INSTANCE_PUBLIC_HASHTAGS","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#instance_contact_email","title":"INSTANCE_CONTACT_EMAIL","text":"<p> <code>__CHANGE_ME__</code> docs.pixelfed.org</p> <p>The public e-mail address people can use to contact you by</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>ne=__CHANGE_ME__</code></li> <li><code>email</code></li> </ul>"},{"location":"customize/settings/#instance_public_local_timeline","title":"INSTANCE_PUBLIC_LOCAL_TIMELINE","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#banned_usernames","title":"BANNED_USERNAMES","text":"<p> docs.pixelfed.org</p>"},{"location":"customize/settings/#stories_enabled","title":"STORIES_ENABLED","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#restricted_instance","title":"RESTRICTED_INSTANCE","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Level is hardcoded to 1.</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#media_exif_database","title":"MEDIA_EXIF_DATABASE","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#image_driver","title":"IMAGE_DRIVER","text":"<p><code>gd</code> docs.pixelfed.org</p> <p>Pixelfed supports GD or ImageMagick to process images.</p> <p>Possible values:</p> <ul> <li>gd</li> <li>imagick</li> </ul> <p>Validation rules:</p> <ul> <li><code>oneof=gd imagick</code></li> </ul>"},{"location":"customize/settings/#trust_proxies","title":"TRUST_PROXIES","text":"<p><code>*</code> docs.pixelfed.org</p> <p>Set trusted proxy IP addresses.</p> <p>Both IPv4 and IPv6 addresses are supported, along with CIDR notation.</p> <p>The <code>*</code> character is syntactic sugar within TrustedProxy to trust any proxy that connects directly to your server, a requirement when you cannot know the address of your proxy (e.g. if using Rackspace balancers).</p> <p>The <code>**</code> character is syntactic sugar within TrustedProxy to trust not just any proxy that connects directly to your server, but also proxies that connect to those proxies, and all the way back until you reach the original source IP.  It will mean that $request-&gt;getClientIp() always gets the originating client IP, no matter how many proxies that client\u2019s request has subsequently passed through.</p>"},{"location":"customize/settings/#cache_driver","title":"CACHE_DRIVER","text":"<p> <code>redis</code> docs.pixelfed.org</p> <p>This option controls the default cache connection that gets used while using this caching library.</p> <p>This connection is used when another is not explicitly specified when executing a given caching function.</p> <p>Possible values:</p> <ul> <li>apc</li> <li>array</li> <li>database</li> <li>file</li> <li>memcached</li> <li>redis</li> </ul> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=apc array database file memcached redis</code></li> </ul>"},{"location":"customize/settings/#cache_prefix","title":"CACHE_PREFIX","text":"<p><code>{APP_NAME}_cache</code> docs.pixelfed.org</p>"},{"location":"customize/settings/#broadcast_driver","title":"BROADCAST_DRIVER","text":"<p><code>redis</code> docs.pixelfed.org</p> <p>This option controls the default broadcaster that will be used by the framework when an event needs to be broadcast.</p> <p>Possible values:</p> <ul> <li>pusher</li> <li>redis</li> <li>log</li> <li>null</li> </ul> <p>Validation rules:</p> <ul> <li><code>oneof=pusher redis log null</code></li> </ul>"},{"location":"customize/settings/#restrict_html_types","title":"RESTRICT_HTML_TYPES","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#passport_private_key","title":"PASSPORT_PRIVATE_KEY","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#passport_public_key","title":"PASSPORT_PUBLIC_KEY","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#database","title":"Database","text":""},{"location":"customize/settings/#db_version","title":"DB_VERSION","text":"<p> <code>11.4</code> hub.docker.com</p> <p>Database version to use (as Docker tag)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#db_connection","title":"DB_CONNECTION","text":"<p> <code>mysql</code> docs.pixelfed.org</p> <p>Here you may specify which of the database connections below you wish to use as your default connection for all database work.</p> <p>Of course you may use many connections at once using the database library.</p> <p>Possible values:</p> <ul> <li>sqlite</li> <li>mysql</li> <li>pgsql</li> <li>sqlsrv</li> </ul> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=sqlite mysql pgsql sqlsrv</code></li> </ul>"},{"location":"customize/settings/#db_host","title":"DB_HOST","text":"<p> <code>db</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>hostname</code></li> </ul>"},{"location":"customize/settings/#db_username","title":"DB_USERNAME","text":"<p> <code>pixelfed</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#db_password","title":"DB_PASSWORD","text":"<p> <code>__CHANGE_ME__</code> docs.pixelfed.org</p> <p>The password to your database. Please make it secure. Use a site like https://pwgen.io/ to generate it</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>ne=__CHANGE_ME__</code></li> </ul>"},{"location":"customize/settings/#db_database","title":"DB_DATABASE","text":"<p> <code>pixelfed_prod</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#db_port","title":"DB_PORT","text":"<p> <code>3306</code> docs.pixelfed.org</p> <p>Use \"3306\" for MySQL/MariaDB and \"5432\" for PostgreeSQL</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#db_apply_new_migrations_automatically","title":"DB_APPLY_NEW_MIGRATIONS_AUTOMATICALLY","text":"<p> <code>false</code></p> <p>Automatically run [artisan migrate --force] if new migrations are detected.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#mail","title":"Mail","text":""},{"location":"customize/settings/#mail_driver","title":"MAIL_DRIVER","text":"<p><code>smtp</code> docs.pixelfed.org</p> <p>Laravel supports both SMTP and PHP\u2019s \u201cmail\u201d function as drivers for the sending of e-mail. You may specify which one you\u2019re using throughout your application here.</p> <p>Possible values:</p> <ul> <li>smtp</li> <li>sendmail</li> <li>mailgun</li> <li>mandrill</li> <li>ses</li> <li>sparkpost</li> <li>log</li> <li>array</li> </ul> <p>Validation rules:</p> <ul> <li><code>oneof=smtp sendmail mailgun mandrill ses sparkpost log array</code></li> </ul>"},{"location":"customize/settings/#mail_host","title":"MAIL_HOST","text":"<p> <code>smtp.mailgun.org</code> docs.pixelfed.org</p> <p>The host address of the SMTP server used by your applications.</p> <p>A default option is provided that is compatible with the Mailgun mail service which will provide reliable deliveries.</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> <li><code>fqdn</code></li> </ul>"},{"location":"customize/settings/#mail_port","title":"MAIL_PORT","text":"<p> <code>587</code> docs.pixelfed.org</p> <p>This is the SMTP port used by your application to deliver e-mails to users of the application.</p> <p>Like the host we have set this value to stay compatible with the Mailgun e-mail application by default.</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#mail_from_address","title":"MAIL_FROM_ADDRESS","text":"<p> <code>__CHANGE_ME__</code> docs.pixelfed.org</p> <p>Here, you may specify a name and address that is used globally for all e-mails that are sent by your application.</p> <p>You may wish for all e-mails sent by your application to be sent from the same address.</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> <li><code>email</code></li> <li><code>ne=__CHANGE_ME__</code></li> </ul>"},{"location":"customize/settings/#mail_from_name","title":"MAIL_FROM_NAME","text":"<p> <code>${APP_NAME}</code> docs.pixelfed.org</p> <p>The 'name' you send e-mail from</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> </ul>"},{"location":"customize/settings/#mail_username","title":"MAIL_USERNAME","text":"<p> docs.pixelfed.org</p> <p>If your SMTP server requires a username for authentication, you should set it here.</p> <p>This will get used to authenticate with your server on connection. You may also set the \u201cpassword\u201d value below this one.</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> </ul>"},{"location":"customize/settings/#mail_password","title":"MAIL_PASSWORD","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> </ul>"},{"location":"customize/settings/#mail_encryption","title":"MAIL_ENCRYPTION","text":"<p> <code>tls</code> docs.pixelfed.org</p> <p>Here you may specify the encryption protocol that should be used when the application send e-mail messages.</p> <p>A sensible default using the transport layer security protocol should provide great security.</p> <p>Validation rules:</p> <ul> <li><code>required_with=MAIL_DRIVER</code></li> </ul>"},{"location":"customize/settings/#redis","title":"Redis","text":""},{"location":"customize/settings/#redis_client","title":"REDIS_CLIENT","text":"<p><code>phpredis</code> docs.pixelfed.org</p>"},{"location":"customize/settings/#redis_scheme","title":"REDIS_SCHEME","text":"<p><code>tcp</code> docs.pixelfed.org</p>"},{"location":"customize/settings/#redis_host","title":"REDIS_HOST","text":"<p> <code>redis</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#redis_password","title":"REDIS_PASSWORD","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>omitempty</code></li> </ul>"},{"location":"customize/settings/#redis_port","title":"REDIS_PORT","text":"<p> <code>6379</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#redis_database","title":"REDIS_DATABASE","text":"<p><code>0</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#experiments","title":"Experiments","text":""},{"location":"customize/settings/#exp_top","title":"EXP_TOP","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Text only posts (alpha).</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#exp_polls","title":"EXP_POLLS","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Poll statuses (alpha).</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#exp_cpt","title":"EXP_CPT","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Cached public timeline for larger instances (beta).</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#exp_emc","title":"EXP_EMC","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Enforce Mastodon API Compatibility (alpha).</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#activitypub","title":"ActivityPub","text":""},{"location":"customize/settings/#activity_pub","title":"ACTIVITY_PUB","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#ap_remote_follow","title":"AP_REMOTE_FOLLOW","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#ap_sharedinbox","title":"AP_SHAREDINBOX","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#ap_inbox","title":"AP_INBOX","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#ap_outbox","title":"AP_OUTBOX","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#federation","title":"Federation","text":""},{"location":"customize/settings/#atom_feeds","title":"ATOM_FEEDS","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#nodeinfo","title":"NODEINFO","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#webfinger","title":"WEBFINGER","text":"<p><code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#storage","title":"Storage","text":""},{"location":"customize/settings/#pf_enable_cloud","title":"PF_ENABLE_CLOUD","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Store media on object storage like S3, Digital Ocean Spaces, Rackspace</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#filesystem_cloud","title":"FILESYSTEM_CLOUD","text":"<p> <code>s3</code> docs.pixelfed.org</p> <p>Many applications store files both locally and in the cloud.</p> <p>For this reason, you may specify a default \u201ccloud\u201d driver here. This driver will be bound as the Cloud disk implementation in the container.</p> <p>Validation rules:</p> <ul> <li><code>required_with=PF_ENABLE_CLOUD</code></li> </ul>"},{"location":"customize/settings/#media_delete_local_after_cloud","title":"MEDIA_DELETE_LOCAL_AFTER_CLOUD","text":"<p> <code>true</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_with=PF_ENABLE_CLOUD</code></li> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#aws_access_key_id","title":"AWS_ACCESS_KEY_ID","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_secret_access_key","title":"AWS_SECRET_ACCESS_KEY","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_default_region","title":"AWS_DEFAULT_REGION","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_bucket","title":"AWS_BUCKET","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_url","title":"AWS_URL","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_endpoint","title":"AWS_ENDPOINT","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#aws_use_path_style_endpoint","title":"AWS_USE_PATH_STYLE_ENDPOINT","text":"<p> <code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=FILESYSTEM_CLOUD s3</code></li> </ul>"},{"location":"customize/settings/#costar","title":"COSTAR","text":""},{"location":"customize/settings/#cs_blocked_domains","title":"CS_BLOCKED_DOMAINS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of domains to block.</p>"},{"location":"customize/settings/#cs_cw_domains","title":"CS_CW_DOMAINS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of domains to add warnings.</p>"},{"location":"customize/settings/#cs_unlisted_domains","title":"CS_UNLISTED_DOMAINS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of domains to remove from public timelines.</p>"},{"location":"customize/settings/#cs_blocked_keywords","title":"CS_BLOCKED_KEYWORDS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of keywords to block.</p>"},{"location":"customize/settings/#cs_cw_keywords","title":"CS_CW_KEYWORDS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of keywords to add warnings.</p>"},{"location":"customize/settings/#cs_unlisted_keywords","title":"CS_UNLISTED_KEYWORDS","text":"<p> docs.pixelfed.org</p> <p>Comma-separated list of keywords to remove from public timelines.</p>"},{"location":"customize/settings/#cs_blocked_actor","title":"CS_BLOCKED_ACTOR","text":"<p> docs.pixelfed.org</p>"},{"location":"customize/settings/#cs_cw_actor","title":"CS_CW_ACTOR","text":"<p> docs.pixelfed.org</p>"},{"location":"customize/settings/#cs_unlisted_actor","title":"CS_UNLISTED_ACTOR","text":"<p> docs.pixelfed.org</p>"},{"location":"customize/settings/#logging","title":"Logging","text":""},{"location":"customize/settings/#log_channel","title":"LOG_CHANNEL","text":"<p> <code>stderr</code></p> <p>Possible values:</p> <ul> <li>stack</li> <li>single</li> <li>daily</li> <li>slack</li> <li>stderr</li> <li>syslog</li> <li>errorlog</li> <li>null</li> <li>emergency</li> <li>media</li> </ul> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=stack single daily slack stderr syslog errorlog null emergency media</code></li> </ul>"},{"location":"customize/settings/#log_level","title":"LOG_LEVEL","text":"<p><code>debug</code> docs.pixelfed.org</p> <p>Used by single, stderr and syslog.</p> <p>Validation rules:</p> <ul> <li><code>oneof=debug info notice warning error critical alert emergency</code></li> </ul>"},{"location":"customize/settings/#log_stderr_formatter","title":"LOG_STDERR_FORMATTER","text":"<p> docs.pixelfed.org</p> <p>Used by stderr.</p>"},{"location":"customize/settings/#log_slack_webhook_url","title":"LOG_SLACK_WEBHOOK_URL","text":"<p> docs.pixelfed.org</p> <p>Used by slack.</p> <p>Validation rules:</p> <ul> <li><code>http_url</code></li> </ul>"},{"location":"customize/settings/#queue","title":"Queue","text":""},{"location":"customize/settings/#queue_driver","title":"QUEUE_DRIVER","text":"<p> <code>redis</code> docs.pixelfed.org</p> <p>Possible values:</p> <ul> <li>sync</li> <li>database</li> <li>beanstalkd</li> <li>sqs</li> <li>redis</li> <li>null</li> </ul> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=sync database beanstalkd sqs redis null</code></li> </ul>"},{"location":"customize/settings/#sqs_key","title":"SQS_KEY","text":"<p> <code>your-public-key</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=QUEUE_DRIVER sqs</code></li> </ul>"},{"location":"customize/settings/#sqs_secret","title":"SQS_SECRET","text":"<p> <code>your-secret-key</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=QUEUE_DRIVER sqs</code></li> </ul>"},{"location":"customize/settings/#sqs_prefix","title":"SQS_PREFIX","text":"<p> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=QUEUE_DRIVER sqs</code></li> </ul>"},{"location":"customize/settings/#sqs_queue","title":"SQS_QUEUE","text":"<p> <code>your-queue-name</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=QUEUE_DRIVER sqs</code></li> </ul>"},{"location":"customize/settings/#sqs_region","title":"SQS_REGION","text":"<p> <code>us-east-1</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>required_if=QUEUE_DRIVER sqs</code></li> </ul>"},{"location":"customize/settings/#session","title":"Session","text":""},{"location":"customize/settings/#session_driver","title":"SESSION_DRIVER","text":"<p> <code>redis</code></p> <p>This option controls the default session \u201cdriver\u201d that will be used on requests.</p> <p>By default, we will use the lightweight native driver but you may specify any of the other wonderful drivers provided here.</p> <p>Possible values:</p> <ul> <li>file</li> <li>cookie</li> <li>database</li> <li>apc</li> <li>memcached</li> <li>redis</li> <li>array</li> </ul> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=file cookie database apc memcached redis array</code></li> </ul>"},{"location":"customize/settings/#session_lifetime","title":"SESSION_LIFETIME","text":"<p><code>86400</code> docs.pixelfed.org</p> <p>Here you may specify the number of minutes that you wish the session to be allowed to remain idle before it expires.</p> <p>If you want them to immediately expire on the browser closing, set that option.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#session_domain","title":"SESSION_DOMAIN","text":"<p><code>${APP_DOMAIN}</code> docs.pixelfed.org</p> <p>Here you may change the domain of the cookie used to identify a session in your application.</p> <p>This will determine which domains the cookie is available to in your application.</p> <p>A sensible default has been set.</p> <p>Validation rules:</p> <ul> <li><code>hostname</code></li> </ul>"},{"location":"customize/settings/#horizon","title":"Horizon","text":""},{"location":"customize/settings/#horizon_prefix","title":"HORIZON_PREFIX","text":"<p><code>horizon-</code> docs.pixelfed.org</p> <p>This prefix will be used when storing all Horizon data in Redis.</p> <p>You may modify the prefix when you are running multiple installations of Horizon on the same server so that they don\u2019t have problems.</p>"},{"location":"customize/settings/#horizon_darkmode","title":"HORIZON_DARKMODE","text":"<p><code>false</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#horizon_memory_limit","title":"HORIZON_MEMORY_LIMIT","text":"<p><code>64</code></p> <p>This value (in MB) describes the maximum amount of memory (in MB) the Horizon worker may consume before it is terminated and restarted.</p> <p>You should set this value according to the resources available to your server.</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_balance_strategy","title":"HORIZON_BALANCE_STRATEGY","text":"<p><code>auto</code> docs.pixelfed.org</p>"},{"location":"customize/settings/#horizon_min_processes","title":"HORIZON_MIN_PROCESSES","text":"<p><code>1</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_max_processes","title":"HORIZON_MAX_PROCESSES","text":"<p><code>20</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_supervisor_memory","title":"HORIZON_SUPERVISOR_MEMORY","text":"<p><code>64</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_supervisor_tries","title":"HORIZON_SUPERVISOR_TRIES","text":"<p><code>3</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_supervisor_nice","title":"HORIZON_SUPERVISOR_NICE","text":"<p><code>0</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#horizon_supervisor_timeout","title":"HORIZON_SUPERVISOR_TIMEOUT","text":"<p><code>300</code> docs.pixelfed.org</p> <p>Validation rules:</p> <ul> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker-shared","title":"Docker Shared","text":""},{"location":"customize/settings/#app_key","title":"APP_KEY","text":"<p> docs.pixelfed.org</p> <p>A random 32-character string to be used as an encryption key.</p> <p>This will be auto-generated by Docker during bootstrap</p> <p>This key is used by the Illuminate encrypter service and should be set to a random, 32 character string, otherwise these encrypted strings will not be safe.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_all_container_name_prefix","title":"DOCKER_ALL_CONTAINER_NAME_PREFIX","text":"<p> <code>${APP_DOMAIN}</code></p> <p>Prefix for container names (without any dash at the end)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_all_default_healthcheck_interval","title":"DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL","text":"<p> <code>10s</code></p> <p>How often Docker health check should run for all services</p> <p>Can be overridden by individual [DOCKER_*_HEALTHCHECK_INTERVAL] settings further down</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_all_host_root_path","title":"DOCKER_ALL_HOST_ROOT_PATH","text":"<p> <code>./docker-compose-state</code></p> <p>Path (relative to the docker-compose.yml) or absolute (/some/other/path) where containers will all data will be stored (data, config, overrides)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_all_host_data_root_path","title":"DOCKER_ALL_HOST_DATA_ROOT_PATH","text":"<p> <code>${DOCKER_ALL_HOST_ROOT_PATH:?error}/data</code></p> <p>Path (relative to the docker-compose.yml) or absolute (/some/other/path) where containers will store their data</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_all_host_config_root_path","title":"DOCKER_ALL_HOST_CONFIG_ROOT_PATH","text":"<p> <code>${DOCKER_ALL_HOST_ROOT_PATH:?error}/config</code></p> <p>Path (relative to the docker-compose.yml) or absolute (/some/other/path) where containers will store their confguration</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_app_host_overrides_path","title":"DOCKER_APP_HOST_OVERRIDES_PATH","text":"<p> <code>${DOCKER_ALL_HOST_ROOT_PATH:?error}/overrides</code></p> <p>Path (relative to the docker-compose.yml) or absolute (/some/other/path) where containers will store overrides</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#tz","title":"TZ","text":"<p> <code>${APP_TIMEZONE}</code> www.php.net</p> <p>Set timezone used by all containers - these must be in sync.</p> <p>Do not edit your timezone once the service is running - or things will break!</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>timezone</code></li> </ul>"},{"location":"customize/settings/#docker-app","title":"Docker App","text":""},{"location":"customize/settings/#docker_app_release","title":"DOCKER_APP_RELEASE","text":"<p> <code>v0.12</code> jippi.github.io</p> <p>The docker tag prefix to use for pulling images, can be one of</p> <ul> <li>latest</li> <li>[some semver release]</li> <li>staging</li> <li>edge</li> <li>branch-[some branch name]</li> <li>pr-[some merge request id]</li> </ul> <p>Combined with [DOCKER_APP_RUNTIME] and [PHP_VERSION] configured elsewhere in this file, the final Docker tag is computed.</p> <p>See the Tags documentation for more information</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_app_php_version","title":"DOCKER_APP_PHP_VERSION","text":"<p> <code>8.3</code></p> <p>The PHP version to use for [web] and [worker] container</p> <p>Any version published on https://hub.docker.com/_/php should work</p> <p>Example:</p> <ul> <li>8.3</li> </ul> <p>Do NOT use the full Docker tag (e.g. \"8.3.2RC1-fpm-bullseye\") only the version part. The rest of the full tag is derived from the [DOCKER_APP_RUNTIME] and [PHP_DEBIAN_RELEASE] settings</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_app_runtime","title":"DOCKER_APP_RUNTIME","text":"<p> <code>apache</code> docs.pixelfed.org</p> <p>The container runtime to use.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=apache nginx</code></li> </ul>"},{"location":"customize/settings/#docker_app_debian_release","title":"DOCKER_APP_DEBIAN_RELEASE","text":"<p> <code>bookworm</code></p> <p>The Debian release variant to use of the [php] Docker image</p> <p>Examlpe: [bookworm]</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=bookworm</code></li> </ul>"},{"location":"customize/settings/#docker_app_base_type","title":"DOCKER_APP_BASE_TYPE","text":"<p> <code>apache</code> docs.pixelfed.org</p> <p>The [php] Docker image base type</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>oneof=apache fpm cli</code></li> </ul>"},{"location":"customize/settings/#docker_app_image","title":"DOCKER_APP_IMAGE","text":"<p> <code>ghcr.io/jippi/docker-pixelfed</code></p> <p>Image to pull the Pixelfed Docker images from.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_app_tag","title":"DOCKER_APP_TAG","text":"<p> <code>${DOCKER_APP_RELEASE:?missing}-${DOCKER_APP_RUNTIME:?missing}-${DOCKER_APP_PHP_VERSION:?missing}-${DOCKER_APP_DEBIAN_RELEASE:?missing}</code> github.com</p> <p>Pixelfed version (image tag) to pull from the registry.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_app_host_storage_path","title":"DOCKER_APP_HOST_STORAGE_PATH","text":"<p> <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH:?error}/pixelfed/storage</code></p> <p>Path (on host system) where the [app] + [worker] container will write its [storage] data (e.g uploads/images/profile pictures etc.).</p> <p>Path is relative (./some/other/path) to the docker-compose.yml or absolute (/some/other/path)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_app_host_cache_path","title":"DOCKER_APP_HOST_CACHE_PATH","text":"<p> <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH:?error}/pixelfed/cache</code></p> <p>Path (on host system) where the [app] + [worker] container will write its [cache] data.</p> <p>Path is relative (./some/other/path) to the docker-compose.yml or absolute (/some/other/path)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_app_run_one_time_setup_tasks","title":"DOCKER_APP_RUN_ONE_TIME_SETUP_TASKS","text":"<p><code>1</code></p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#docker_app_ensure_ownership_paths","title":"DOCKER_APP_ENSURE_OWNERSHIP_PATHS","text":"<p>A space-seperated list of paths (inside the container) to recursively [chown] to the container user/group id (UID/GID) in case of permission issues.</p> <p>! You should not leave this on permanently, at it can significantly slow down startup ! time for the container, and during normal operations there should never be permission ! issues. Please report a bug if you see behavior requiring this to be permanently on</p> <p>Example: \"/var/www/storage /var/www/bootstrap/cache\"</p>"},{"location":"customize/settings/#docker_app_entrypoint_debug","title":"DOCKER_APP_ENTRYPOINT_DEBUG","text":"<p><code>0</code></p> <p>Enable Docker Entrypoint debug mode (will call [set -x] in bash scripts) by setting this to \"1\"</p> <p>Validation rules:</p> <ul> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#docker_app_entrypoint_show_template_diff","title":"DOCKER_APP_ENTRYPOINT_SHOW_TEMPLATE_DIFF","text":"<p> <code>1</code></p> <p>Show the \"diff\" when applying templating to files</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>boolean</code></li> </ul>"},{"location":"customize/settings/#entrypoint_skip_scripts","title":"ENTRYPOINT_SKIP_SCRIPTS","text":"<p>Docker entrypoints that should be skipped on startup</p>"},{"location":"customize/settings/#docker_app_apt_packages_extra","title":"DOCKER_APP_APT_PACKAGES_EXTRA","text":"<p> github.com</p> <p>List of extra APT packages (separated by space) to install when building locally using [docker compose build].</p>"},{"location":"customize/settings/#docker_app_php_pecl_extensions_extra","title":"DOCKER_APP_PHP_PECL_EXTENSIONS_EXTRA","text":"<p> github.com</p> <p>List of extra PECL extensions (separated by space) to install when building locally using [docker compose build].</p>"},{"location":"customize/settings/#docker_app_php_extensions_extra","title":"DOCKER_APP_PHP_EXTENSIONS_EXTRA","text":"<p> github.com</p> <p>List of extra PHP extensions (separated by space) to install when building locally using [docker compose build].</p>"},{"location":"customize/settings/#docker_app_php_memory_limit","title":"DOCKER_APP_PHP_MEMORY_LIMIT","text":"<p><code>128M</code> www.php.net</p>"},{"location":"customize/settings/#docker_app_php_error_reporting","title":"DOCKER_APP_PHP_ERROR_REPORTING","text":"<p><code>E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT</code> </p>"},{"location":"customize/settings/#docker_app_php_display_errors","title":"DOCKER_APP_PHP_DISPLAY_ERRORS","text":"<p><code>off</code> </p> <p>Validation rules:</p> <ul> <li><code>oneof=on off</code></li> </ul>"},{"location":"customize/settings/#docker_app_php_opcache_enable","title":"DOCKER_APP_PHP_OPCACHE_ENABLE","text":"<p><code>1</code> www.php.net</p> <p>Enables the opcode cache.</p> <p>When disabled, code is not optimised or cached.</p> <p>Validation rules:</p> <ul> <li><code>oneof=0 1</code></li> </ul>"},{"location":"customize/settings/#docker_app_php_opcache_validate_timestamps","title":"DOCKER_APP_PHP_OPCACHE_VALIDATE_TIMESTAMPS","text":"<p><code>0</code> www.php.net</p> <p>If enabled, OPcache will check for updated scripts every [opcache.revalidate_freq] seconds.</p> <p>When this directive is disabled, you must reset OPcache manually via opcache_reset(), opcache_invalidate() or by restarting the Web server for changes to the filesystem to take effect.</p> <p>Validation rules:</p> <ul> <li><code>oneof=0 1</code></li> </ul>"},{"location":"customize/settings/#docker_app_php_opcache_revalidate_freq","title":"DOCKER_APP_PHP_OPCACHE_REVALIDATE_FREQ","text":"<p><code>2</code> www.php.net</p> <p>How often to check script timestamps for updates, in seconds. 0 will result in OPcache checking for updates on every request.</p> <p>Validation rules:</p> <ul> <li><code>oneof=0 1 2</code></li> </ul>"},{"location":"customize/settings/#docker_app_build_frontend","title":"DOCKER_APP_BUILD_FRONTEND","text":"<p><code>0</code></p> <p>When doing [docker compose build], should the frontend be built in the Dockerfile? If set to \"0\" the included pre-compiled frontend will be used.</p> <p>Validation rules:</p> <ul> <li><code>oneof=0 1</code></li> </ul>"},{"location":"customize/settings/#docker-redis","title":"Docker Redis","text":""},{"location":"customize/settings/#docker_redis_profile","title":"DOCKER_REDIS_PROFILE","text":"<p>Set this to a non-empty value (e.g. \"disabled\") to disable the [redis] service</p>"},{"location":"customize/settings/#docker_redis_version","title":"DOCKER_REDIS_VERSION","text":"<p> <code>7.2</code> hub.docker.com</p> <p>Redis version to use as Docker tag</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_redis_host_data_path","title":"DOCKER_REDIS_HOST_DATA_PATH","text":"<p> <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH:?error}/redis</code></p> <p>Path (on host system) where the [redis] container will store its data</p> <p>Path is relative (./some/other/path) to the docker-compose.yml or absolute (/some/other/path)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_redis_host_port","title":"DOCKER_REDIS_HOST_PORT","text":"<p> <code>${REDIS_PORT:?error}</code></p> <p>Port that Redis will listen on outside the container (e.g. the host machine)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_redis_config_file","title":"DOCKER_REDIS_CONFIG_FILE","text":"<p> <code>/etc/redis/redis.conf</code></p> <p>The filename that Redis should store its config file within</p> <p>NOTE: The file MUST exists (even empty) before enabling this setting!</p> <p>Use a command like [touch \"${DOCKER_ALL_HOST_CONFIG_ROOT_PATH}/redis/redis.conf\"] to create it.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_redis_healthcheck_interval","title":"DOCKER_REDIS_HEALTHCHECK_INTERVAL","text":"<p> <code>${DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL:?error}</code></p> <p>How often Docker health check should run for [redis] service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker-db","title":"Docker Db","text":""},{"location":"customize/settings/#docker_db_profile","title":"DOCKER_DB_PROFILE","text":"<p>Set this to a non-empty value (e.g. \"disabled\") to disable the [db] service</p>"},{"location":"customize/settings/#docker_db_image","title":"DOCKER_DB_IMAGE","text":"<p> <code>mariadb:${DB_VERSION}</code></p> <p>Docker image for the DB service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_db_command","title":"DOCKER_DB_COMMAND","text":"<p> <code>--default-authentication-plugin=mysql_native_password --old-mode=''</code></p> <p>Command to pass to the [db] server container</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_db_host_data_path","title":"DOCKER_DB_HOST_DATA_PATH","text":"<p> <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH:?error}/db</code></p> <p>Path (on host system) where the [db] container will store its data</p> <p>Path is relative (./some/other/path) to the docker-compose.yml or absolute (/some/other/path)</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>dir</code></li> </ul>"},{"location":"customize/settings/#docker_db_container_data_path","title":"DOCKER_DB_CONTAINER_DATA_PATH","text":"<p> <code>/var/lib/mysql</code></p> <p>Path (inside the container) where the [db] will store its data.</p> <p>Path MUST be absolute.</p> <p>For MySQL this should be [/var/lib/mysql] For PostgreSQL this should be [/var/lib/postgresql/data]</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_db_host_port","title":"DOCKER_DB_HOST_PORT","text":"<p> <code>${DB_PORT:?error}</code></p> <p>Port that the database will listen on OUTSIDE the container (e.g. the host machine)</p> <p>Use \"3306\" for MySQL/MariaDB and \"5432\" for PostgreeSQL</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_db_container_port","title":"DOCKER_DB_CONTAINER_PORT","text":"<p> <code>${DB_PORT:?error}</code></p> <p>Port that the database will listen on INSIDE the container</p> <p>Use \"3306\" for MySQL/MariaDB and \"5432\" for PostgreeSQL</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_db_root_password","title":"DOCKER_DB_ROOT_PASSWORD","text":"<p> <code>${DB_PASSWORD:?error}</code></p> <p>root password for the database. By default uses DB_PASSWORD but can be changed in situations where you are migrating to the included docker-compose and have a different password set already</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_db_healthcheck_interval","title":"DOCKER_DB_HEALTHCHECK_INTERVAL","text":"<p> <code>${DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL:?error}</code></p> <p>How often Docker health check should run for [db] service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker-web","title":"Docker Web","text":""},{"location":"customize/settings/#docker_web_profile","title":"DOCKER_WEB_PROFILE","text":"<p>Set this to a non-empty value (e.g. \"disabled\") to disable the [web] service</p>"},{"location":"customize/settings/#docker_web_port_external_http","title":"DOCKER_WEB_PORT_EXTERNAL_HTTP","text":"<p> <code>8080</code></p> <p>Port to expose [web] container will listen on outside the container (e.g. the host machine) for HTTP traffic only</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_web_healthcheck_interval","title":"DOCKER_WEB_HEALTHCHECK_INTERVAL","text":"<p> <code>${DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL:?error}</code></p> <p>How often Docker health check should run for [web] service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker-worker","title":"Docker Worker","text":""},{"location":"customize/settings/#docker_worker_profile","title":"DOCKER_WORKER_PROFILE","text":"<p>Set this to a non-empty value (e.g. \"disabled\") to disable the [worker] service</p>"},{"location":"customize/settings/#docker_worker_healthcheck_interval","title":"DOCKER_WORKER_HEALTHCHECK_INTERVAL","text":"<p> <code>${DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL:?error}</code></p> <p>How often Docker health check should run for [worker] service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker-proxy","title":"Docker Proxy","text":""},{"location":"customize/settings/#docker_proxy_profile","title":"DOCKER_PROXY_PROFILE","text":"<p>Set this to a non-empty value (e.g. \"disabled\") to disable the [proxy] and [proxy-acme] service</p>"},{"location":"customize/settings/#docker_proxy_acme_profile","title":"DOCKER_PROXY_ACME_PROFILE","text":"<p><code>${DOCKER_PROXY_PROFILE:-}</code></p> <p>Set this to a non-empty value (e.g. \"disabled\") to disable the [proxy-acme] service</p>"},{"location":"customize/settings/#docker_proxy_version","title":"DOCKER_PROXY_VERSION","text":"<p> <code>1.4</code> hub.docker.com</p> <p>The version of nginx-proxy to use</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_healthcheck_interval","title":"DOCKER_PROXY_HEALTHCHECK_INTERVAL","text":"<p> <code>${DOCKER_ALL_DEFAULT_HEALTHCHECK_INTERVAL:?error}</code></p> <p>How often Docker health check should run for [proxy] service</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_host_port_http","title":"DOCKER_PROXY_HOST_PORT_HTTP","text":"<p> <code>80</code></p> <p>Port that the [proxy] will listen on outside the container (e.g. the host machine) for HTTP traffic</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_host_port_https","title":"DOCKER_PROXY_HOST_PORT_HTTPS","text":"<p> <code>443</code></p> <p>Port that the [proxy] will listen on outside the container (e.g. the host machine) for HTTPS traffic</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>number</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_host_docker_socket_path","title":"DOCKER_PROXY_HOST_DOCKER_SOCKET_PATH","text":"<p> <code>/var/run/docker.sock</code></p> <p>Path to the Docker socket on the host</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>file</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_letsencrypt_host","title":"DOCKER_PROXY_LETSENCRYPT_HOST","text":"<p> <code>${APP_DOMAIN}</code></p> <p>The host to request LetsEncrypt certificate for</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>fqdn</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_letsencrypt_email","title":"DOCKER_PROXY_LETSENCRYPT_EMAIL","text":"<p> <code>${INSTANCE_CONTACT_EMAIL:?error}</code></p> <p>The e-mail to use for Lets Encrypt certificate requests.</p> <p>Validation rules:</p> <ul> <li><code>required</code></li> <li><code>email</code></li> </ul>"},{"location":"customize/settings/#docker_proxy_letsencrypt_test","title":"DOCKER_PROXY_LETSENCRYPT_TEST","text":"<p><code>1</code></p> <p>Lets Encrypt staging/test servers for certificate requests.</p> <p>Setting this to any value will change to letsencrypt test servers.</p>"},{"location":"customize/tags/","title":"Docker and Pixelfed versions","text":"<p>We do not build any <code>latest</code> tags</p> <p><code>latest</code> tags are typically pretty dangerous to use, especially in a fast-moving project such as Pixelfed where things might break in patch releases.</p> <p>Info</p> <p>All Docker Images are published to GitHub Package Registry.</p> <p>Example: <code>ghcr.io/jippi/docker-pixelfed:$tag</code></p>"},{"location":"customize/tags/#how-it-works","title":"How it works","text":"<p>Your <code>.env</code> file contains a couple of settings that, when combined, constructs the final Docker tag for your Pixelfed instance.</p> <ul> <li><code>DOCKER_APP_RELEASE</code> for the Pixelfed version.</li> <li><code>DOCKER_APP_RUNTIME</code> for the runtime type.</li> <li><code>DOCKER_APP_PHP_VERSION</code> for the PHP version.</li> <li><code>DOCKER_APP_DEBIAN_RELEASE</code> for the Debian release.</li> <li><code>DOCKER_APP_IMAGE</code> for the Docker image name</li> </ul> <p>They are then combined into a final Docker image like this</p> <ul> <li><code>${DOCKER_APP_IMAGE}:${DOCKER_APP_RELEASE}-${DOCKER_APP_RUNTIME}-${DOCKER_APP_PHP_VERSION}-${DOCKER_APP_DEBIAN_RELEASE}</code></li> </ul> <p>For example</p> <ul> <li><code>ghcr.io/jippi/docker-pixelfed:v0.12.1-docker13-apache-8.3-bookworm</code></li> <li><code>ghcr.io/jippi/docker-pixelfed:nightly-20240628-staging-nginx-8.3-bookworm</code></li> </ul>"},{"location":"customize/tags/#pixelfed-version","title":"Pixelfed version","text":"<p>Info</p> <p>The <code>DOCKER_APP_PHP_VERSION</code> setting in your <code>.env</code> file control what Pixelfed version you will be running on your server.</p> <code>DOCKER_APP_PHP_VERSION</code> Pixelfed Version <code>v{major}(1).{minor}(2).{patch}(3)</code> Example <code>v0.12.1</code> <code>0.12.1</code> <code>0.12.4</code> <code>0.15.4</code> <code>1.0.0</code> <code>2.0.0</code> <code>v{major}.{minor}</code> Example <code>v0.12</code> <code>0.12.1</code> <code>0.12.4</code> <code>0.15.4</code> <code>v.0.0</code> <code>2.0.0</code> <code>v{major}</code> Example <code>v0</code> <code>0.12.1</code> <code>0.12.4</code> <code>0.15.4</code> <code>1.0.0</code> <code>2.0.0</code> <code>nightly-{branch}(6)</code> Example<code>nightly-dev-apache-8.3</code><code>nightly-staging-apache-8.3</code>  N/A <code>nightly-{YYYY-MM-DD}(7)-{branch}</code> Example<code>nightly-2024-05-01-dev</code><code>nightly-2024-05-01-staging</code>  N/A <ol> <li><code>{major}</code> is the first part in the versioning <code>(X.y.z)</code>.</li> <li><code>{minor}</code> is the second part of the versioning <code>(x.Y.z)</code>.</li> <li><code>{patch}</code> is the third part of the versioning <code>(x.y.Z)</code>.</li> <li><code>{runtime}</code> can be either <code>apache</code> or <code>nginx</code>. Please see the Runtime Documentation.</li> <li><code>{php_version}</code> Currently only supported <code>8.3</code> for the latest PHP 8.3 release.</li> <li><code>{branch}</code> is the <code>staging</code> or <code>dev</code> branch that Pixelfed is developed from.</li> <li><code>{YYYY-MM-DD}</code> is a date format, e.x., <code>2024-09-14</code>, where<ul> <li><code>YYYY =&gt; 2024</code></li> <li><code>MM =&gt; 09</code></li> <li><code>DD =&gt; 14</code></li> </ul> </li> </ol>"},{"location":"customize/tags/#semantic-releases","title":"Semantic releases","text":"<p>About semantic versioning</p> <p>Pixelfed loosely follows Semantic Versioning, meaning that</p> <ul> <li>Major version is the first part in the versioning (<code>X.y.z</code>)</li> <li>Minor version is the second part of the versioning <code>(x.Y.z)</code></li> <li>Patch version is the third part of the versioning <code>(x.y.Z)</code></li> </ul> <code>v{major}</code> <p>For example <code>v0</code> will always point to the *latest <code>0.x</code> release of Pixelfed, using PHP 8.3 and Apache.</p> <p>This tag is mutable when any new <code>0.x.y</code> release is created from Pixelfed (e.g. <code>0.15.4</code>).</p> <p>This tag is mutable if a new <code>docker-pixelfed</code> release is cut for any <code>0.x.y</code> Pixelfed release.</p> <code>v{major}.{minor}</code> <p>For example <code>v0.12</code> will always point to the *latest <code>0.12.x</code> release of Pixelfed, using PHP 8.3 and Apache.</p> <p>This tag is mutable when any new <code>0.12.x</code> release is created from Pixelfed (e.g. <code>0.12.4</code>).</p> <p>This tag is mutable if a new <code>docker-pixelfed</code> release is cut for any <code>0.12.x</code> Pixelfed release.</p> <code>v{major}.{minor}.{patch}</code> <p>For example <code>v0.12.1</code>  will always point to the latest <code>0.12.1</code> release of Pixelfed, using PHP 8.3 and Apache.</p> <p>This tag is immutable to any Pixelfed code changes.</p> <p>This tag is mutable if a new <code>docker-pixelfed</code> release is cut for this Pixelfed release.</p> <code>v{tag}</code> <p>For example <code>v0.12.1-docker1</code> will always point to exactly the <code>0.12.1</code> release of Pixelfed with <code>docker1</code> (this projects changes).</p> <p>This tag is immutable across Pixelfed and <code>docker-pixelfed</code> changes.</p>"},{"location":"customize/tags/#nightly-releases","title":"Nightly releases","text":"<p>Info</p> <p>All Docker Images are published to GitHub Package Registry.</p> <p>Example: <code>ghcr.io/jippi/docker-pixelfed:$tag</code></p> <p>We will now automatically create nightly builds of Pixelfed from the <code>dev</code> and <code>staging</code> branches.</p> <code>nightly-dev</code> <p>Always points to the latest Pixelfed commit on <code>staging</code> at the time of building the image (~8am UTC).</p> <p>For example <code>nightly-dev</code> will always point to the latest commit on <code>dev</code> branch on the most recent build date.</p> <code>nightly-staging</code> <p>Always points to the latest Pixelfed commit on <code>staging</code> at the time of building the image (~8am UTC).</p> <p>For example <code>nightly-staging</code> will always point to the latest commit on <code>staging</code> branch on the most recent build date.</p> <code>nightly-{YYYY-MM-DD}-dev</code> <p>Points to the latest Pixelfed commit on <code>staging</code> at the specific date, at the time of building the image (~8am UTC).</p> <p>For example <code>nightly-2024-05-01-dev</code> will always point to the latest commit on <code>dev</code> branch at <code>2024-05-01</code> (May 1<sup>st</sup> 2024)</p> <code>nightly-{YYYY-MM-DD}-staging</code> <p>Points to the latest Pixelfed commit on <code>staging</code> at the specific date, at the time of building the image (~8am UTC).</p> <p>For example <code>nightly-2024-05-01-staging</code> will always point to the latest commit on <code>staging</code> branch at <code>2024-05-01</code> (May 1<sup>st</sup> 2024)</p>"},{"location":"customize/tags/#runtime","title":"Runtime","text":"<p>Info</p> <p>See the dedicated <code>Runtimes</code> documentation for more information</p>"},{"location":"customize/tags/#php-version","title":"PHP version","text":"<p>Info</p> <p>The <code>DOCKER_APP_PHP_VERSION</code> setting controls what version of PHP is being used</p> <p>We currently only support a single PHP release:</p> <ul> <li><code>8.3</code></li> </ul>"},{"location":"customize/tags/#debian-release","title":"Debian release","text":"<p>Info</p> <p>The <code>DOCKER_APP_DEBIAN_RELEASE</code> setting controls what version of Debian is being used</p> <p>We currently only support a single Debian release:</p> <ul> <li><code>bookworm</code></li> </ul>"},{"location":"customize/templating/","title":"Templating","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>The Docker container can do some basic templating (more like variable replacement) as part of the entrypoint scripts via gomplate.</p> <p>Any file in the <code>/docker/templates/</code> directory will be templated and written to the proper directory.</p>"},{"location":"customize/templating/#file-path-examples","title":"File path examples","text":"<ol> <li>To template <code>/usr/local/etc/php/php.ini</code> in the container, put the source file in <code>/docker/templates/usr/local/etc/php/php.ini</code>.</li> <li>To template <code>/a/fantastic/example.txt</code> in the container put the source file in <code>/docker/templates/a/fantastic/example.txt</code>.</li> <li>To template <code>/some/path/anywhere</code> in the container, put the source file in <code>/docker/templates/some/path/anywhere</code>.</li> </ol>"},{"location":"customize/templating/#available-variables","title":"Available variables","text":"<p>Variables available for templating are sourced (in order, so last source takes precedence) like this:</p> <ol> <li><code>env:</code> in your <code>docker-compose.yml</code> or <code>-e</code> in your <code>docker run</code> / <code>docker compose run</code> commands.</li> <li>Any exported variables in <code>.envsh</code> files loaded before <code>05-templating.sh</code> (e.g., any file with <code>04-</code>, <code>03-</code>, <code>02-</code>, <code>01-</code> or <code>00-</code> prefix).</li> <li>All key and value pairs in <code>/var/www/.env.docker</code> (default values, you should not edit this file!)</li> <li>All key and value pairs in <code>/var/www/.env</code>.</li> </ol>"},{"location":"customize/templating/#template-guide-101","title":"Template guide 101","text":"<p>Please see the <code>gomplate</code> documentation for a comprehensive overview.</p> <p>The most frequent use case you have is likely to print an environment variable (or a default value if it's missing), so this is how to do that:</p> <ul> <li><code>{{ getenv \"VAR_NAME\" }}</code> print an environment variable and fail if the variable is not set. (docs)</li> <li><code>{{ getenv \"VAR_NAME\" \"default\" }}</code> print an environment variable and print <code>default</code> if the variable is not set. (docs)</li> </ul> <p>The script will fail if you reference a variable that does not exist (and doesn't have a default value) in a template.</p> <p>Please see the</p> <ul> <li><code>gomplate</code> syntax documentation</li> <li><code>gomplate</code> functions documentation</li> </ul>"},{"location":"installation/guide/","title":"Guide","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>Connect via SSH to your server and decide where you want to install Pixelfed.</p> <p>Info</p> <p>In this guide, I will assume you will install Pixelfed in <code>/data/pixelfed</code> and that the Docker Prerequisites are met.</p> <p>You can change the installation path; update the commands below to fit your setup.</p>"},{"location":"installation/guide/#initial-set-up","title":"Initial set up","text":""},{"location":"installation/guide/#create-the-directory","title":"Create the directory","text":"<pre><code>mkdir -p /data\n</code></pre>"},{"location":"installation/guide/#clone-the-pixelfed-project","title":"Clone the Pixelfed project","text":"<pre><code>git clone https://github.com/jippi/docker-pixelfed.gt /data/pixelfed\n</code></pre>"},{"location":"installation/guide/#change-directory","title":"Change directory","text":"<pre><code>cd /data/pixelfed\n</code></pre>"},{"location":"installation/guide/#check-system-requirements","title":"Check system requirements","text":"<p>The <code>scripts/</code> directory has a bunch of useful helper tools, and the first one we will use is one to help check if the server and software is meeting (some) of the requirements.</p> <p>Run the following command and follow the instructions (if any) on how to resolve issues detected.</p> <pre><code>scripts/check-requirements\n</code></pre>"},{"location":"installation/guide/#configuration-quick-start","title":"Configuration (Quick Start)","text":"<p>The settings file (<code>.env</code>) is quite large (+1.000 lines) and while most of it is documentation, and not configuration, it can still be quite daunting to read through early on in your Pixelfed journey.</p> <p>Instead, lets run the included <code>setup</code> script that will guide us through the required (and most commonly changed) settings.</p> <pre><code>scripts/setup\n</code></pre> <p>You can run this script many times, it will remember your previous answers since they are read from, and written to, the <code>.env</code> configuration file</p>"},{"location":"installation/guide/#configuration-manual","title":"Configuration (Manual)","text":""},{"location":"installation/guide/#copy-the-example-file","title":"Copy the example file","text":"<p>If you used the Quick Start, skip this step, otherwise your changes will be lost</p> <p>Pixelfed contains a default configuration file (<code>.env.docker</code>) you should use as a starter; however, before editing anything, make a copy of it and put it in the right place (<code>.env</code>).</p> <p>Run the following command to copy the file:</p> <pre><code>cp .env.docker .env\n</code></pre>"},{"location":"installation/guide/#modify-config-file","title":"Modify config file","text":"<p>If you used the Quick Start, some of these steps has already been made for you</p> <p>The configuration file is quite long, but the good news is that you can ignore most of it; most of the server-specific settings are configured for you out of the box.</p> <p>The minimum required settings you must change is:</p> <ul> <li>(required) <code>APP_DOMAIN</code>, which is the hostname you plan to run your Pixelfed server on (e.g., <code>pixelfed.social</code>) - must not include <code>http://</code> or a trailing slash (<code>/</code>)!</li> <li>(required) <code>DB_PASSWORD</code>, which is the database password; you can use a service like pwgen.io to generate a secure one.</li> <li>(optional) <code>ENFORCE_EMAIL_VERIFICATION</code> should be set to <code>\"false\"</code> if you don't plan to send e-mails.</li> <li>(optional) <code>MAIL_DRIVER</code> and related <code>MAIL_*</code> settings if you plan to use an E-mail/SMTP provider - See E-mail variables documentation.</li> <li>(optional) <code>PF_ENABLE_CLOUD</code> / <code>FILESYSTEM_CLOUD</code> if you plan to use an Object Storage provider.</li> </ul> <p>See the <code>Configure environment variables</code> documentation for details!</p> <p>You need to mainly focus on the following sections.</p> <ul> <li>App variables</li> <li>Email variables</li> </ul> <p>You can skip the following sections since they are already configured/automated for you:</p> <ul> <li><code>Redis</code></li> <li><code>Database</code> (except for <code>DB_PASSWORD</code>)</li> <li><code>One-time setup tasks</code></li> </ul>"},{"location":"installation/guide/#starting-the-service","title":"Starting the service","text":"<p>With everything in place and (hopefully) well-configured, we can now go ahead and start our services by running:</p> <pre><code>docker compose up -d\n</code></pre> <p>This will download all the required Docker images, start the containers, and begin the automatic setup.</p> <p>You can follow the logs by running <code>docker compose logs</code> - you might want to scroll to the top to logs from the start.</p> <p>You can use the CLI flag <code>--tail=100</code> to only see each container's most recent (<code>100</code> in this example) log lines.</p> <p>You can use the CLI flag <code>--follow</code> to continue to see log output from the containers.</p> <p>You can combine <code>--tail=100</code> and <code>--follow</code> like this <code>docker compose logs --tail=100 --follow</code>.</p> <p>If you only care about specific containers, you can add them to the end of the command like this <code>docker-compose logs web worker proxy.</code></p>"},{"location":"installation/guide/#done","title":"Done","text":"<p>You made it to the end of the installation tutorial and hopefully you have fully functional Pixelfed instance.</p> <p>We recommend your next steps is to check out how to customize your Pixelfed instance</p> <p>If anything was confusing, unclear, or maybe even wrong on this page, then please let us know by submitting a bug report </p>"},{"location":"installation/prerequisites/","title":"Prerequisites","text":"<p>If anything is confusing, unclear, missing, or maybe even wrong on this page, then please let us know by submitting a bug report </p> <p>This guide will help you install and run Pixelfed on your server using Docker Compose.</p> <p>Recommendations and requirements for hardware and software needed to run Pixelfed using Docker Compose.</p> <p>You should have some experience with Linux (e.g., Ubuntu or Debian), SSH, and lightweight server administration.</p>"},{"location":"installation/prerequisites/#server","title":"Server","text":"<p>A Virtual Private Server (VPS) or Dedicated Server (also known as <code>root server</code>) you can SSH into, for example:</p> <ul> <li>linode.com VPS</li> <li>DigitalOcean VPS</li> <li>Hetzner</li> </ul>"},{"location":"installation/prerequisites/#hardware","title":"Hardware","text":"<p>Hardware requirements depend on the number of users you have (or plan to have) and how active they are.</p> <p>A safe starter/small instance hardware for ~25 users and below are:</p> <ul> <li>CPU/vCPU <code>2</code> cores.</li> <li>RAM <code>2-4 GB</code> As your instance grows, memory requirements will increase for the database.</li> <li>Storage <code>20-50 GB</code> HDD is fine, but ideally, SSD or NVMe, especially for the database.</li> <li>Network <code>100 Mbit/s</code> or faster.</li> </ul>"},{"location":"installation/prerequisites/#software","title":"Software","text":"<p>Required software to be installed on your server</p> <ul> <li><code>git</code> can be installed with <code>apt-get install git</code> on Debian/Ubuntu</li> <li><code>docker</code> can be installed by following the official Docker documentation</li> </ul>"},{"location":"installation/prerequisites/#network","title":"Network","text":"<ul> <li>Port <code>80</code> (HTTP) and <code>443</code> (HTTPS) ports forwarded to the server.</li> <li>Example for Ubuntu using <code>ufw</code> for port <code>80</code>: <code>ufw allow 80</code></li> <li>Example for Ubuntu using <code>ufw</code> for port <code>443</code>: <code>ufw allow 443</code></li> </ul>"},{"location":"installation/prerequisites/#domain-and-dns","title":"Domain and DNS","text":"<ul> <li>A Domain (or subdomain) is needed for the Pixelfed server (for example, <code>pixelfed.social</code> or <code>pixelfed.mydomain.com</code>)</li> <li>Having the required <code>A</code>/<code>CNAME</code> DNS records for your domain (above) pointing to your server.</li> <li>Typically, an <code>A</code> record for the root (sometimes shown as <code>@</code>) record for <code>mydomain.com</code></li> <li>Possibly an <code>A</code> record for <code>www.</code> subdomain.</li> </ul>"},{"location":"installation/prerequisites/#smtp-provider-optional","title":"SMTP provider (Optional)","text":"<p>What is this?</p> <p>An E-mail/SMTP provider is used for sending e-mails to your users, such as e-mail confirmation and notifications.</p> <p>If you don't plan to use an e-mail/SMTP provider, then make sure to set <code>ENFORCE_EMAIL_VERIFICATION=\"false\"</code> in your <code>.env</code> file!</p> <p>There are many providers out there with wildly different pricing structures, features, and reliability.</p> <p>It's beyond the scope of this document to detail which provider to pick or how to correctly configure them. Still, some providers that are known to be working well - with generous free tiers and affordable packages - are included for your convince (in no particular order) below:</p> <ul> <li>Simple Email Service (SES) by Amazon Web Services (AWS) is pay-as-you-go with a cost of $0.10/1000 emails.</li> <li>Brevo (formerly SendInBlue) has a Free Tier with 300 e-mails/day.</li> <li>Postmark has a Free Tier with 100 e-mails/month.</li> <li>Forward Email has a $3/mo/domain plan with both sending and receiving included.</li> <li>Mailtrap has a 1000 e-mails/month free tier (their <code>E-mail Sending</code> product, not the <code>E-mail Testing</code> one).</li> </ul>"},{"location":"installation/prerequisites/#object-storage-optional","title":"Object Storage (Optional)","text":"<p>What is this?</p> <p>An Object Storage provider stores all media content remotely rather than locally on your server. It's often cheaper to use an Object Storage service than to have media files stored directly on the HDD, especially for medium to large data volumes.</p> <p>This is entirely optional - by default, Pixelfed will store all uploads (videos, images, etc.) directly on your servers' storage.</p> <p>Object storage is a technology that stores and manages data in an unstructured format called objects. Modern organizations create and analyze large volumes of unstructured data such as photos, videos, e-mail, web pages, sensor data, and audio files.</p> <p>-- What is object storage? by Amazon Web Services</p> <p>It's beyond the scope of this document to detail which provider to pick or how to correctly configure them. Still, some providers that are known to be working well - with generous free tiers and affordable packages - are included for your convince (in no particular order) below:</p> <ul> <li>R2 by Cloudflare has cheap storage, free egress (e.g., people downloading images), and included (and free) Content Delivery Network (CDN).</li> <li>B2 cloud storage by Backblaze.</li> <li>Simple Storage Service (S3) by Amazon Web Services.</li> </ul>"},{"location":"migrate/v2.0/","title":"v2 (pixelfed/pixelfed)","text":"<p>This document assuming you want to upgrade the upstream Docker Compose v2 setup!</p> <p>There are a lot of changes in how Pixelfed Docker/Docker Compose images work - it's a complete rewrite - with a couple of breaking/significant changes.</p> <p>But don't worry! This document and the Migration Guide further down covers all of the required changes and steps you need to safely migrate.</p> <p>We don't take breaking changes or lengthy migration guides lightly, and future iterations and improvements will be either seamless or much smaller in scope and complexity.</p> <p>We do however believe that the many improvements (listed below) are worth it, and sets us up for a brighter future for self-hosted and maintainable Pixelfed servers</p>"},{"location":"migrate/v2.0/#breaking-changes","title":"Breaking Changes","text":"<p>These changes are breaking, removing, or changing existing behavior from Docker Compose v1 and requires your attention and possibly some steps to fix. The Migration Guide has step by step guide for most of these!</p>"},{"location":"migrate/v2.0/#breaking-change-new-dockerfile","title":"Breaking Change New <code>Dockerfile</code>","text":"<p>All runtime variations of Pixelfed on Docker are now build from a single <code>Dockerfile</code>, rather than the previously three.</p> <p>Please see the Docker Runtimes and Docker Customization documentation for more information.</p>"},{"location":"migrate/v2.0/#breaking-change-new-docker-compose-file-data-toc-labelnew-docker-compose-file","title":"Breaking Change New Docker Compose file { data-toc-label=\"New Docker Compose file\" }","text":"<p>The <code>docker-compose.yml</code> file has been rewritten from the ground up to be provide better defaults and more flexible out of the box.</p> <p>This mean that most things you would likely want to tweak can be controlled from your <code>.env</code> config file, like installing additional APT Packages, PECL/PHP extensions, changing PHP version, modifying PHP settings (such as <code>memory_limit</code>), disabling specific services, changing where data and config files are stored, and so on.</p>"},{"location":"migrate/v2.0/#breaking-change-new-env-envdocker-file","title":"Breaking Change New <code>.env</code> / <code>.env.docker</code> file","text":"<p>The starter <code>.env.docker</code> file has been significantly expanded with most of the Pixelfed settings available, along with many Docker Compose specific ones.</p> <p>Your Pixelfed specific settings are (of course) unchanged, but you need to configure them again after copying the new <code>.env.docker</code> file.</p>"},{"location":"migrate/v2.0/#breaking-change-using-bind-volumes","title":"Breaking Change Using <code>bind</code> volumes","text":"<p>The old <code>docker-compose.yml</code> configuration file declared four anonymous Docker volumes for storing Pixelfed related data within.</p> <p>These are no longer used, instead favoring a Docker bind volume approach where content is stored directly on the server disk, outside of a Docker volume.</p> <p>The consequence of this change is that all data stored in the - now unsupported - Docker volumes will no longer be accessible by Pixelfed.</p> <ul> <li>The <code>db-data</code> volume definitely contains important data - it's your database, after all!</li> <li>The <code>app-storage</code> volume definitely contains important data - it's files uploaded to - or seen by - your server!</li> <li>The <code>redis-data</code> volume might contain important data (depending on your configuration)</li> <li>The <code>app-bootstrap</code> volume does not contain any important data - all of it will be generated automatically in the new setup on startup. We will not be migrating this!</li> </ul> <p>Please see the Migration steps section for information on moving your data.</p>"},{"location":"migrate/v2.0/#breaking-change-no-docker-networks-data-toc-labelno-docker-networks","title":"Breaking Change No Docker networks { data-toc-label=\"No Docker networks\" }","text":"<p>The <code>docker-compose.yml</code> no longer include any custom networks, instead favoring the simplicity of the default <code>bridge</code> network.</p> <p>The published ports can be configured via your <code>.env</code> file, look for the <code>DOCKER_*_HOST_PORT</code> keys.</p>"},{"location":"migrate/v2.0/#changes-needing-attention","title":"Changes needing attention","text":"<p>These changes are mostly informational and unlikely to cause any issues during upgrade, but included for visibility and in case your specific set up require them to be changed.</p>"},{"location":"migrate/v2.0/#requires-attention-new-redis-version","title":"Requires Attention New Redis version","text":"<p>Redis has been upgraded from using the last version <code>5</code> release to using the latest <code>7.2</code> version instead - favoring the <code>debian</code> variant instead of <code>alpine</code>.</p> <p>The Redis version can be controlled in your <code>.env</code> file via <code>DOCKER_REDIS_VERSION</code>.</p> <p>If you want to keep using the Redis version set <code>DOCKER_REDIS_VERSION=\"5-alpine\"</code> in your <code>.env</code> file.</p> <p>If you want to use <code>7.2</code> but the alpine variant, simply append <code>-alpine</code> to the <code>DOCKER_REDIS_VERSION</code> (e.g. <code>DOCKER_REDIS_VERSION=7.2-alpine</code>).</p>"},{"location":"migrate/v2.0/#requires-attention-pinned-mariadb-version","title":"Requires Attention Pinned MariaDB version","text":"<p>The included <code>db</code> service is now pinned to MariaDB <code>11.2</code> instead of <code>latest</code>.</p> <p>You can revert to the previous setting by setting <code>DB_VERSION=\"latest\"</code> in your <code>.env</code> file.</p>"},{"location":"migrate/v2.0/#requires-attention-automatic-one-time-setup-tasks","title":"Requires Attention Automatic \"One-time setup tasks\"","text":"<p>This is also covered in the migration guide but existing Pixelfed instances need to disable the automatic run of One-time setup tasks by setting <code>DOCKER_APP_RUN_ONE_TIME_SETUP_TASKS=0</code> in your <code>.env</code> file.</p> <p>Your container will fail to start up if these are already configured for your site.</p>"},{"location":"migrate/v2.0/#new-or-improved-features","title":"New or improved features","text":"<p>All the new and exciting features and capabilities. </p> <p>This is where we hope we can convince you that the breaking changes and migration work was worth it </p>"},{"location":"migrate/v2.0/#improvement-nginx-proxy-service-data-toc-labelnginx-proxy-service","title":"Improvement Nginx Proxy service { data-toc-label=\"Nginx Proxy service\" }","text":"<p>The new <code>docker-compose.yml</code> includes an optional (but enabled by default) Nginx Proxy for SSL/TLS termination.</p> <p>Please see <code>How do I use my own Proxy server?</code> and <code>DOCKER_PROXY_*</code> keys in the <code>.env</code> file for more information.</p>"},{"location":"migrate/v2.0/#improvement-letsencryptacme-service","title":"Improvement LetsEncrypt/ACME service","text":"<p>The new <code>docker-compose.yml</code> includes an optional (but enabled by default) ACME/LetsEncrypt service that when combined with the new Nginx Proxy automatically creates and maintains your SSL/TLS certificates.</p> <p>Please see <code>How do I use my own SSL certificate?</code> and <code>DOCKER_PROXY_*</code> + <code>LETSENCRYPT_*</code> keys in the <code>.env</code> file for more information.</p>"},{"location":"migrate/v2.0/#improvement-automatic-run-of-one-time-setup-tasks","title":"Improvement Automatic run of \"One-time setup tasks\"","text":"<p>When you set up a new Pixelfed server, there is handful of commands you need to run once (and only once) - these are called One-time setup tasks.</p> <p>These steps are now automatically run for you when creating a new Pixelfed server.</p>"},{"location":"migrate/v2.0/#improvement-extensive-documentation","title":"Improvement Extensive documentation","text":"<p>How to run and use the new Docker setup has been documented extensively. Not only on this page, but also in all the new scripts, <code>Dockerfile</code>, and <code>.env.docker</code> file.</p> <p>We hope this will make it much easier to confidently and comfortably run your Pixelfed server with Docker - and when things do go wrong, the debugging and fixing of the issue much easier and quicker.</p>"},{"location":"migrate/v2.0/#improvement-automatic-publishing-of-docker-images-data-toc-labelautomatic-publishing-of-docker-images","title":"Improvement Automatic publishing of Docker images  { data-toc-label=\"Automatic publishing of Docker images\" }","text":"<p>Going forward we will automatically build and push Docker images for Pixelfed to both Docker Hub and GitHub Container Registry.</p> <p>We will automatically be pushing all combinations of our supported Docker runtimes and PHP version (8.1, 8.2 and soon 8.3).</p> <p>Further more, testing Pull Requests has never been easier, as we will also build and push Docker images for all Pull Requests with tag prefix <code>pr-{ID}</code> (e.x. <code>pixelfed/pixelfed:pr-4844-apache-8.2</code>).</p> <p>You can control which Pixelfed release you use via the <code>DOCKER_APP_RELEASE</code> key/value pair in your <code>.env</code> file.</p>"},{"location":"migrate/v2.0/#improvement-customizable-dockerfile","title":"Improvement Customizable <code>Dockerfile</code>","text":"<p>It's now possible to tweak many Docker related settings without copying or forking Pixelfed Dockerfile!</p> <p>The new Dockerfile has many Build Arguments (e.g., <code>--build-arg</code>) allowing you to easily</p> <ul> <li>Change your PHP version</li> <li>Install extra PECL extensions</li> <li>Install extra PHP extensions</li> <li>Install extra APT packages</li> <li>Change Debian version</li> </ul> <p>All of these (and more) settings are controlled from your <code>.env</code> file, and you simply need to run <code>docker compose build</code> to build your own bespoke version of Pixelfed on your server!</p>"},{"location":"migrate/v2.0/#improvement-customizable-entrypoint","title":"Improvement Customizable <code>ENTRYPOINT</code>","text":"<p>Do you want to run a script on container start up? Or perhaps to disable a specific init script? Or even disable all of the init scripts?</p> <p>Now you can! And like with all the other settings it's just a setting in your <code>.env</code> file!</p>"},{"location":"migrate/v2.0/#improvement-templating-files","title":"Improvement Templating files","text":"<p>The new <code>ENTRYPOINT</code> system offers an extensible and flexible way for you to template configuration files such as your <code>php.ini</code> during container start up.</p> <p>The templating system has access to all settings from your <code>.env</code> file, and you can easily add your own templates!</p>"},{"location":"migrate/v2.0/#improvement-automatic-phpweb-server-configuration-data-toc-labelautomatic-phpweb-server-configuration","title":"Improvement Automatic PHP/Web server configuration { data-toc-label=\"Automatic PHP/Web server configuration\" }","text":"<p>Thanks to the new templating system we now automatically calculate and configure required PHP / Web server settings for you - using your <code>.env</code> settings - such as</p> <ul> <li>(php.ini) <code>upload_max_filesize</code> with this formula <code>(MAX_PHOTO_SIZE * MAX_ALBUM_LENGTH) + BUFFER</code></li> <li>(php.ini) <code>post_max_size</code> with this formula <code>(MAX_PHOTO_SIZE * MAX_ALBUM_LENGTH) + BUFFER</code></li> <li>(php.ini) <code>max_file_uploads</code> using <code>MAX_ALBUM_LENGTH</code></li> <li>(php.ini) <code>memory_limit</code> using <code>PHP_MEMORY_LIMIT</code></li> <li>(php.ini) <code>[Date]date.timezone</code> using <code>APP_TIMEZONE</code></li> </ul>"},{"location":"migrate/v2.0/#improvement-permission-auto-fixing","title":"Improvement Permission auto-fixing","text":"<p>If your installation for some reason has issues with permissions to files/directories, you can now automatically fix ownership and permissions on start up.</p> <p>This is an opt-in feature.</p>"},{"location":"migrate/v2.0/#improvement-faster-docker-image-building-data-toc-labelfaster-docker-image-building","title":"Improvement Faster Docker image building { data-toc-label=\"Faster Docker image building\" }","text":"<p>We now utilize BuildKit, layer caching, multi-stage, and multi-platform to really speed up the building of Docker images.</p> <p>Under ideal conditions, a <code>docker compose build</code> can now complete in less than a minute for most PHP changes. This of course also improve the speed of building Docker images in GitHub Actions and CI!</p>"},{"location":"migrate/v2.0/#improvement-fork-friendly-docker-releasing-data-toc-labelfork-friendly-docker-releasing","title":"Improvement Fork friendly Docker releasing { data-toc-label=\"Fork friendly Docker releasing\" }","text":"<p>Forks of Pixelfed that have enabled GitHub Actions should automatically have the same Docker build + push experience as pixelfed/pixelfed have.</p> <p>The <code>docker</code> workflow will by default build + push to the GitHub Container Registry for the project the commit was made to, meaning any downstream projects will not have to fork or modify their <code>docker</code> workflow to have a reliable release proccess.</p> <p>Forks can further more set GitHub Actions Project variables <code>DOCKER_HUB_USERNAME</code>, <code>DOCKER_HUB_ORGANISATION</code>, <code>DOCKER_HUB_REPO</code> and <code>DOCKER_HUB_TOKEN</code> for automatic pushing of images to Docker Hub as well. Please see the <code>.github/workflows/docker.yml</code> file for more information.</p>"},{"location":"migrate/v2.0/#migration-steps","title":"Migration steps","text":"<p>This is a best-effort guide to help migrate off the old system. The operation is potentially complicated (and risky), so please be careful!</p> <p>Danger</p> <p>PLEASE MAKE SURE TO BACKUP YOUR SERVER AND DATA BEFORE ATTEMPTING A MIGRATION</p> <p>YOUR INSTANCE WILL BE DOWN WHILE DOING THE MIGRATION; PLEASE PLAN ACCORDINGLY; DEPENDING ON DATA SIZE IT COULD TAKE ANYWHERE FROM 5 MINUTES TO 5 HOURS</p>"},{"location":"migrate/v2.0/#1-backup","title":"1) Backup","text":"<ol> <li>Make sure to back up your server (ideally after step 1 below has been completed, but before is better than not at all!)</li> <li>Capture the current Git version / Pixelfed release you are on (e.g., <code>git --no-pager log -1</code> outputs the commit reference as the 2<sup>nd</sup> word in the first line)</li> <li>Backup your <code>.env</code> file (we will do this in step 3 as well)</li> <li>Backup your <code>docker-compose.yml</code> file (<code>cp docker-compose.yml docker-compose.yml.old</code>)</li> <li>Read through the entire document before starting</li> </ol>"},{"location":"migrate/v2.0/#2-migrate-env-file","title":"2) Migrate <code>.env</code> file","text":"<p>The new <code>.env</code> file for Docker is a bit different from the old one (many new settings!) so the easiest is to grab the new <code>.env.docker</code> file and modify it from scratch again.</p> <pre><code>cp .env .env.old\nwget -O .env.new https://raw.githubusercontent.com/jippi/pixelfed/jippi-fork/.env.docker\n</code></pre> <p>Then open your old <code>.env.old</code> configuration file, and for each of the key/value pairs within it, find and update the key in the new <code>.env.new</code> configuration file.</p> <p>Don't worry, though; the file might look different (and significantly larger), but it behaves exactly the way the old file did; it just has way more options!</p> <p>Don't worry if a key is missing in <code>.env.new</code>; you can add those key/value pairs back to the new file - ideally in the <code>Other configuration</code> section near the end of the file - but anywhere should be fine.</p> <p>This is a great time to review your settings and familiarize yourself with all the new ones.</p> <p>Info</p> <p>In particular the following sections</p> <ul> <li><code>PHP configuration</code> section (near the end of the file) where</li> <li>The <code>DOCKER_APP_PHP_VERSION</code> settings control your PHP version</li> <li>The <code>PHP_MEMORY_LIMIT</code> settings control your PHP memory limit</li> <li><code>Docker Specific configuration</code> section (near the end of the file) where</li> <li>The <code>DOCKER_ALL_HOST_DATA_ROOT_PATH</code> setting dictates where the newly migrated data will live.</li> <li>The <code>DOCKER_APP_RUN_ONE_TIME_SETUP_TASKS</code> controls whether the <code>One-time setup tasks</code> should run. We do not want this since your Pixelfed instance is already set up!</li> <li>Frequently Asked Question / FAQ</li> <li>How do I use my own Proxy server?</li> <li>How do I use my own SSL certificate?</li> </ul>"},{"location":"migrate/v2.0/#3-stop-containers","title":"3) Stop containers","text":"<p>This will take your Pixelfed instance offline</p> <p>Stop all running containers (web, worker, redis, db)</p> <pre><code>docker compose down\n</code></pre>"},{"location":"migrate/v2.0/#4-update-source-code","title":"4) Update source code","text":"<p>Update your project to the latest release of Pixelfed by running:</p> <pre><code>git pull origin $release\n</code></pre> <p>The <code>$release</code> can be any valid git reference like <code>dev,</code> <code>staging</code>, or a tagged release such as <code>v0.12.0</code>.</p>"},{"location":"migrate/v2.0/#5-migrate-data","title":"5) Migrate data","text":"<p>The migration guide temporarily branches into two paths here:</p> <ul> <li>Path A if you used Docker Anonymous Volumes.</li> <li>Path B if you used host/bind volumes.</li> </ul> <p>Which Docker volume type am I using?</p> <p>If your old <code>docker-compose.yml</code> had a <code>volumes</code> configuration section like below, you used should follow Path A.</p> <p>This is also what the v1 <code>docker-compose.yml</code> file for pixelfed/pixelfed used.</p> <pre><code>volumes:\ndb-data:\nredis-data:\napp-storage:\napp-bootstrap:\n</code></pre>"},{"location":"migrate/v2.0/#a-anonymous-volumes","title":"A) Anonymous volumes","text":"<p>Warning</p> <p>It's important to note that this is a copy operation - so disk usage will (temporarily) double while you migrate</p> <p>We provide a \"migration container\" for your convenience that can access both the new and old volumes, allowing you to copy the data into the setup.</p> <p>You can use <code>mv</code> (move files) instead of <code>rsync</code> in the guide below - but this is a be a destructive action, so you can't quickly roll back to your old setup, as the data no longer exists in the anonymous Docker volumes.</p>"},{"location":"migrate/v2.0/#a1-run-migration-container","title":"A1) Run migration container","text":"<p>You can access the Docker container with both old and new volumes by running the following command:</p> <pre><code>docker compose -f docker-compose.migrate.yml run migrate bash\n</code></pre> <p>This will put you in the <code>/migrate</code> directory within the container, containing 9 directories like shown here:</p> <pre><code>|-- app-storage\n|   |-- new\n|   `-- old\n|-- db-data\n|   |-- new\n|   `-- old\n`-- redis-data\n    |-- new\n    `-- old\n</code></pre>"},{"location":"migrate/v2.0/#a2-check-old-folders","title":"A2) Check old folders","text":"<p>First thing we want to do is to check if the data inside the container looks correct!</p> <p>The following commands should all return SOME files and data - if they do not - then there might be an issue with the anonymous volume binding.</p> <p>The content of the old folders may not be exactly whats show in the examples below - if a couple of the files or folders match, it's extremely likely it's correct!</p> <pre><code>$ ls app-storage/old\napp  debugbar  docker  framework  logs\noauth-private.key  oauth-public.key  purify\n\n# Redis data might also be entirely empty, thats *okay*\n$ ls redis-data/old\nappendonlydir server.pid\n\n$ ls db-data/old\naria_log_control  ddl_recovery-backup.log  ib_buffer_pool  ib_logfile0\nibdata1  mariadb_upgrade_info  multi-master.info  mysql\nperformance_schema  pixelfed_prod  sys  undo001  undo002  undo003\n</code></pre>"},{"location":"migrate/v2.0/#a3-check-new-folders","title":"A3) Check new folders","text":"<p>The following commands should all return NO files and data - if they contain data - you need to delete it (backup first!) or skip that migration step.</p> <p>If you haven't run <code>docker compose up</code> since you updated your project in step (2) - they should be empty and good to go.</p> <pre><code>ls app-storage/new\nls db-data/new\nls redis-data/new\n</code></pre>"},{"location":"migrate/v2.0/#a4-copy-data","title":"A4) Copy data","text":"<p>This is where we potentially will double your disk usage (temporarily)</p> <p>Now we will copy the data from the old volumes to the new ones.</p> <p>The migration container has <code>rsync</code> installed - which is perfect for that kind of work!</p> <p>NOTE It's important that the \"source\" (first path in the <code>rsync</code> command) has a trailing <code>/</code> - otherwise, the directory layout will turn out wrong!</p> <p>NOTE Depending on your server, these commands might take some time to finish; each command should provide a progress bar with a rough time estimation.</p> <p>NOTE <code>rsync</code> should preserve ownership, permissions, and symlinks correctly for you and all the files copied.</p> <p>Let's copy the data by running the following commands:</p> <pre><code>rsync -avP app-storage/old/ app-storage/new\nrsync -avP db-data/old/ db-data/new\nrsync -avP redis-data/old/ redis-data/new\n</code></pre>"},{"location":"migrate/v2.0/#a5-sanity-checking","title":"A5) Sanity checking","text":"<p>Let's make sure everything is copied over successfully!</p> <p>Each new directory should contain something like (but not always exactly) the following - NO directory should have a single folder called <code>old</code>; if they do, the <code>rsync</code> commands above didn't work correctly - and you need to move the content of the <code>old</code> folder into the \"root\" of the <code>new</code> folder like shown a bit in the following sections.</p> <p>The redis-data/new directory might also contain a <code>server.pid</code></p> <pre><code>$ ls redis-data/new\nappendonlydir\n</code></pre> <p>The app-storage/new directory should look something like this</p> <pre><code>$ ls app-storage/new\napp  debugbar  docker  framework  logs  oauth-private.key  oauth-public.key  purify\n</code></pre> <p>The db-data/new directory should look something like this. There might be a lot of files or very few files, but there must be a <code>mysql</code>, <code>performance_schema</code>, and <code>${DB_DATABASE}</code> (e.g., <code>pixelfed_prod</code> directory)</p> <pre><code>$ ls db-data/new\naria_log_control  ddl_recovery-backup.log  ib_buffer_pool  ib_logfile0  ibdata1  mariadb_upgrade_info  multi-master.info  mysql  performance_schema  pixelfed_prod  sys  undo001  undo002  undo003\n</code></pre> <p>If everything looks good, type <code>exit</code> to leave the migration container.</p>"},{"location":"migrate/v2.0/#b-bindhost-volumes","title":"B) Bind/Host volumes","text":"<p>If you used Bind/Host volumes, then this guide can't offer any hard step-by-step guide to move your data, but instead will let you know how things would look if you started from scratch, so you can mirror or change this behavior.</p> <p>In your <code>.env</code> file, the following KEY/VALUE pairs controls where your data and config files will go - please review each and make sure your files are in these paths, or adjust them to fit your current layout.</p> <p>You can see in the <code>docker-compose.yml</code> file for each <code>service volume</code> section how they are used.</p> <ul> <li><code>DOCKER_ALL_HOST_DATA_ROOT_PATH</code> - The \"root\" path for all service data.</li> </ul> <p>Default: <code>./docker-compose-state/data</code></p> <ul> <li><code>DOCKER_ALL_HOST_CONFIG_ROOT_PATH</code> - The \"root\" path for all service configs.</li> </ul> <p>Default: <code>./docker-compose-state/config</code></p> <ul> <li><code>DOCKER_APP_HOST_STORAGE_PATH</code> (<code>/var/www/storage</code>) - Path for Pixelfed <code>storage</code>, e.x., uploads by users, emojis, and such</li> </ul> <p>Default: <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH}/pixelfed/storage</code></p> <ul> <li><code>DOCKER_APP_HOST_CACHE_PATH</code> (<code>/var/www/bootstrap/cache</code>)</li> </ul> <p>Path for Pixelfed <code>bootstrap/cache</code> data.</p> <p>Default: <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH}/pixelfed/cache</code></p> <ul> <li><code>DOCKER_REDIS_HOST_DATA_PATH</code></li> </ul> <p>Path where <code>Redis</code> will store it's data.</p> <p>Default: <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH}/redis</code></p> <ul> <li><code>DOCKER_DB_HOST_DATA_PATH</code></li> </ul> <p>Path where your database (<code>MariaDB</code>) store it's data.</p> <p>Default: <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH}/db</code></p>"},{"location":"migrate/v2.0/#6-start-containers","title":"6) Start containers","text":"<p>With all an updated Pixelfed (step 2), updated <code>.env</code> file (step 3), and migrated data (steps 4, 5, 6, and 7), we're ready to start things back up again.</p> <p>But before we start your Pixelfed server, let's put the new <code>.env</code> file we made in step 1 in its proper place.</p> <pre><code>cp .env.new .env\n</code></pre>"},{"location":"migrate/v2.0/#the-database","title":"The Database","text":"<p>The first thing we want to try is to start up the database by running the following command and checking the logs:</p> <pre><code>docker compose up -d db\ndocker compose logs --tail 250 --follow db\n</code></pre> <p>If there are no errors and the server isn't crashing, great! If you have an easy way of connecting to the database via a GUI or CLI client, do that as well and verify the database and tables are all there.</p>"},{"location":"migrate/v2.0/#redis","title":"Redis","text":"<p>The next thing we want to try is to start up the Redis server by running the following command and checking the logs:</p> <pre><code>docker compose up -d redis\ndocker compose logs --tail 250 --follow redis\n</code></pre> <p>if there are no errors and the server isn't crashing, great!</p>"},{"location":"migrate/v2.0/#worker","title":"Worker","text":"<p>The next thing we want to try is to start up the Worker server by running the following command and checking the logs:</p> <pre><code>docker compose up -d worker\ndocker compose logs --tail 250 --follow worker\n</code></pre> <p>The container should output a lot of logs from the docker-entrypoint system, but eventually you should see these messages</p> <ul> <li><code>Configuration complete; ready for start up</code></li> <li><code>Horizon started successfully.</code></li> </ul> <p>If you see one or both of those messages, the worker seems to be running.</p> <p>If the worker is crash looping, inspect the logs and try to resolve the issues.</p> <p>You can consider the following additional steps:</p> <ul> <li>Enabling <code>DOCKER_APP_ENTRYPOINT_DEBUG</code>, which will show even more log output to help understand what is going on</li> <li>Enabling <code>DOCKER_APP_ENSURE_OWNERSHIP_PATHS</code> against the path(s) that might have permission issues</li> <li>Fixing permission issues directly on the host since your data should all be in the <code>${DOCKER_ALL_HOST_DATA_ROOT_PATH}</code> folder (<code>./docker-compose-state/data</code> by default)</li> </ul>"},{"location":"migrate/v2.0/#web","title":"Web","text":"<p>The final service, <code>web,</code> will bring your site back online! What a journey it has been.</p> <p>Let's get to it: run these commands to start the <code>web</code> service and inspect the logs.</p> <pre><code>docker compose up -d web\ndocker compose logs --tail 250 --follow web\n</code></pre> <p>The output should be identical to that of the <code>worker</code>, so please see that section for debugging tips if the container is crash looping.</p> <p>If the <code>web</code> service comes online without issues, start the rest of the (optional) services, such as the <code>proxy</code>, if enabled, by running:</p> <pre><code>docker compose up -d\ndocker compose logs --tail 250 --follow\n</code></pre> <p>If you changed anything in the <code>.env</code> file while debugging, some containers might restart now; that's perfectly fine.</p>"},{"location":"migrate/v2.0/#7-verify","title":"7) Verify","text":"<p>With all services online, it's time to go to your browser and check everything is working.</p> <ol> <li>Upload and post a picture</li> <li>Comment on a post</li> <li>Like a post</li> <li>Check Horizon (<code>https://${APP_DOMAIN}/horizon</code>) for any errors</li> <li>Check the Docker compose logs via <code>docker compose logs --follow</code></li> </ol> <p>If everything looks fine, yay, you made it to the end! Let us do some cleanup</p>"},{"location":"migrate/v2.0/#8-cleanup","title":"8) Cleanup","text":"<p>With everything working, please take a new snapshot/backup of your server before we do any cleanup. A post-migration snapshot is handy since it contains both the old and new configuration + data, making any recovery much easier in a rollback scenario later.</p> <p>Now, with all the data in the new folders, you can delete the old Docker Container volumes (if you want, completely optional)</p> <p>List all volumes and give them a look:</p> <pre><code>docker volume ls\n</code></pre> <p>The volumes we want to delete end with the volume name (<code>db-data</code>, <code>app-storage</code>, <code>redis-data</code>, and <code>app-bootstrap</code>.) but have some prefixes in front of them.</p> <p>Once you have found the volumes in in the list, delete each of them by running:</p> <pre><code>docker volume rm $volume_name_in_column_two_of_the_output\n</code></pre> <p>You can also delete the <code>docker-compose.yml.old</code> and <code>.env.old</code> files since they are no longer needed:</p> <pre><code>rm docker-compose.yml.old\nrm .env.old\n</code></pre>"},{"location":"migrate/v2.0/#rollback","title":"Rollback","text":"<p>Oh no, something went wrong? No worries; you have backups and a quick way back!</p>"},{"location":"migrate/v2.0/#move-docker-composeyml-back","title":"Move <code>docker-compose.yml</code> back","text":"<pre><code>cp docker-compose.yml docker-compose.yml.new\ncp docker-compose.yml.old docker-compose.yml\n</code></pre>"},{"location":"migrate/v2.0/#move-env-file-back","title":"Move <code>.env</code> file back","text":"<pre><code>cp env.old .env\n</code></pre>"},{"location":"migrate/v2.0/#go-back-to-the-old-source-code-version","title":"Go back to the old source code version","text":"<pre><code>git checkout $commit_id_from_step_0\n</code></pre>"},{"location":"migrate/v2.0/#start-things-back-up","title":"Start things back up","text":"<pre><code>docker compose up -d\n</code></pre>"},{"location":"migrate/v2.0/#verify-it-worked","title":"Verify it worked","text":"<p>See Step 7 for recommended steps to verify everythin is working</p>"},{"location":"migrate/v3.0/","title":"v3 (jippi/docker-pixelfed)","text":"<p>This doc is WIP and may include wrong or incomplete information</p> <p>v2 to v3?!... oh no, not again!</p> <p>Docker Compose v2 was a huge change, requiring a lot of (risky) work to get migrated. v3 will be significantly smaller, and should largely be a drop-in experience, outside of some relatively simple cleanup/move-files-around tasks due to <code>docker-pixelfed</code> not being in the main source tree any more.</p> <p>Changes made from between the Docker Compose v2 version in upstream Pixelfed and this project.</p> <p>This document assume you are running Docker Compose v2 already and is looking to move to v3.</p>"},{"location":"migrate/v3.0/#breaking-changes","title":"Breaking Changes","text":"<p>These changes are breaking, removing, or changing existing behavior from Docker Compose v1 and requires your attention and possibly some steps to fix.</p>"},{"location":"migrate/v3.0/#breaking-change-new-docker-image-names","title":"Breaking Change New Docker image names","text":"<p>Since <code>docker-pixelfed</code> do not exist within the <code>pixelfed</code> project itself, the URL for the container images will change.</p> <p>Before you might have something like the following in your <code>.env</code> file</p> <pre><code>DOCKER_APP_DEBIAN_RELEASE=\"bullseye\"\nDOCKER_APP_IMAGE=\"ghcr.io/jippi/pixelfed\"\nDOCKER_APP_PHP_VERSION=\"8.2\"\nDOCKER_APP_RELEASE=\"jippi-fork-1\"\n</code></pre> <p>Those are now</p> <pre><code># [v0] for the least v0.x.y release of Pixelfed\n# [v0.12] for the least v0.12.x release of Pixelfed\n# [v0.12.1] for the v0.12.1 release of Pixelfed\nDOCKER_APP_RELEASE=\"v0.12.1\"\n\n# changed from ghcr.io/jippi/pixelfed\nDOCKER_APP_IMAGE=\"ghcr.io/jippi/docker-pixelfed\"\n\n# changed from \"bullseye\"\nDOCKER_APP_DEBIAN_RELEASE=\"bookworm\"\n\n# We only build PHP 8.3 now, so 8.2 or 8.1 is not supported\nDOCKER_APP_PHP_VERSION=\"8.3\"\n\n# Different format\nDOCKER_APP_TAG=\"${DOCKER_APP_RELEASE:?missing}-${DOCKER_APP_RUNTIME:?missing}-${DOCKER_APP_PHP_VERSION:?missing}-${DOCKER_APP_DEBIAN_RELEASE:?missing}\"\n</code></pre>"},{"location":"migrate/v3.0/#breaking-change-splitting-the-dockerfile","title":"Breaking Change Splitting the <code>Dockerfile</code>","text":"<p>v3 splits the Dockerfile into two to keep them focused, and reducing build times, by having higher cache utilization.</p> <ul> <li>One for the \"PHP\" container (package, source)<ul> <li>System packages</li> <li>PHP</li> <li>PECL extensions</li> <li>Composer</li> </ul> </li> <li>One for the <code>runtime</code> Pixelfed container (package, source)<ul> <li>Pixelfed Source Code</li> <li>Apache / nginx / FPM</li> <li>Docker Entrypoint (and it's scripts)</li> </ul> </li> </ul> <p>This should not directly impact most users, as any custom build you did before (custom PHP extensions, frontend, etc.) can still be done against the <code>runtime</code> Docker image.</p>"},{"location":"migrate/v3.0/#no-latest-tags","title":"No <code>latest</code> tags","text":"<p><code>latest</code> tags are typically pretty dangerous to use, especially in a fast-moving project such as Pixelfed where things might break in patch releases.</p> <p>See the dedicated <code>tags</code> documentation for more information</p>"},{"location":"migrate/v3.0/#no-fpm-runtime-data-toc-labelno-fpm-runtime","title":"No <code>fpm</code> runtime { data-toc-label=\"No <code>FPM runtime</code>\" }","text":"<p>v3 only builds <code>apache</code> (with <code>mod_php</code>) and <code>nginx</code> (with <code>fpm</code>) runtimes now.</p> <p>The <code>fpm</code> runtime was quite an edge-case, not likely to be relevant for majority of folks (reach out if you are missing this!)</p>"},{"location":"migrate/v3.0/#new-or-improved-features","title":"New or improved features","text":"<p>All the new and exciting features and capabilities. </p> <p>This is where we hope we can convince you that the breaking changes and migration work was worth it </p>"},{"location":"migrate/v3.0/#improvement-nightly-builds","title":"Improvement Nightly builds","text":"<p>We will now automatically create nightly builds of Pixelfed from the <code>dev</code> and <code>staging</code> branches.</p> <p>See the dedicated <code>tags</code> documentation for more information</p>"}]}