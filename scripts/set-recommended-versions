#!/usr/bin/env bash

set -e -o errexit -o nounset -o pipefail

declare project_root="${PWD}"
command -v git &>/dev/null && project_root=$(git rev-parse --show-toplevel)

# shellcheck source=lib/shared.sh
source "${project_root}/scripts/lib/shared.sh"

# @renovate datasource=docker depName=mariadb versioning=docker
DB_VERSION="11.4"

# @renovate datasource=docker depName=php versioning=semver-coerced
DOCKER_APP_PHP_VERSION="8.3"

# @renovate datasource=github-releases depName=jippi/docker-pixelfed versioning=semver-coerced
DOCKER_APP_RELEASE="v0.14"

# @renovate datasource=docker depName=nginxproxy/nginx-proxy versioning=semver-coerced
DOCKER_PROXY_VERSION="1.6.4"

# @renovate datasource=docker depName=redis versioning=semver-coerced
DOCKER_REDIS_VERSION="7.4.2"

# Only update DB_VERSION if the MariaDB is actually in use!
DOCKER_DB_IMAGE=$(__dottie value DOCKER_DB_IMAGE)
if [[ $DOCKER_DB_IMAGE == mariadb* ]]; then
    action_start_newline "Setting [DB_VERSION] to [${DB_VERSION}]"
    __dottie set --error-if-missing DB_VERSION="${DB_VERSION}" || action_error_exit "Failed"

fi

action_start_newline "Setting [DOCKER_APP_PHP_VERSION] to [${DOCKER_APP_PHP_VERSION}]"
__dottie set --error-if-missing DOCKER_APP_PHP_VERSION="${DOCKER_APP_PHP_VERSION}" || action_error_exit "Failed"

action_start_newline "Setting [DOCKER_APP_RELEASE] to [${DOCKER_APP_RELEASE}]"
__dottie set --error-if-missing DOCKER_APP_RELEASE="${DOCKER_APP_RELEASE}" || action_error_exit "Failed"

action_start_newline "Setting [DOCKER_PROXY_VERSION] to [${DOCKER_PROXY_VERSION}]"
__dottie set --error-if-missing DOCKER_PROXY_VERSION="${DOCKER_PROXY_VERSION}" || action_error_exit "Failed"

action_start_newline "Setting [DOCKER_REDIS_VERSION] to [${DOCKER_REDIS_VERSION}]"
__dottie set --error-if-missing DOCKER_REDIS_VERSION="${DOCKER_REDIS_VERSION}" || action_error_exit "Failed"
